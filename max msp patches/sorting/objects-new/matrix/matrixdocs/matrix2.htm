<!doctype html public "-//w3c//dtd html 4.0 transitional//en"><html><head>   <title>matrix enhancements</title></head><body><h1>matrix 4.0 enhancements</h1>data flow re-router | advanced features <p>see also <a href="matrix.htm" target="_self">matrix</a></p><p>Created by Panaiotis<br>  &copy; 2001 by Panaiotis. All rights reserved.</p><h2>New matrix v4.0 features:</h2><p>Integrates with <b>matrixctrl</b><br>  Includes spray feature<br><p>new clear message<h2>Implementation of matrixctrl</h2><p><b>matrixctrl</b> connects almost directly with <b>matrix</b>. Almost, because   it needs a [<font face="Courier New, Courier, mono">prepend mcleft</font>] or   [<font face="Courier New, Courier, mono">prepend mctop</font>] object between   <b>matrixctrl</b> and <b>matrix</b>. This is necessary because <b>matrix</b>   uses lists to tag the inlets for its own configuration. The mcleft and mctop   messages also provides a way to tell <b>matrix</b> which of two orientations   you want <b>matrixctrl</b> to effect <b>matrix</b>. <p> <p><b>matrix</b> feeds back into <b>matrixctrl</b> (through a connection you make   between <b>matrix</b>'s control outlet and <b>matrixctrl</b>'s left inlet),   so any changes made through <b>matrix</b>'s command set will update <b>matrixctrl</b>.   In this way, you could use <b>matrixctrl</b> simply as a visual representation   of the matrix configuration. This can also be handy if you want to control something   other than <b>matrix</b> with <b>matrixctrl</b>, but use <b>matrix</b>'s configuration   commands. <p> <p>One thing to keep in mind when using <b>matrix</b> with <b>matrixctrl</b>:   <b>matrixctrl</b> uses index values to reference columns and rows; <b>matrix</b>   uses ordinal numbers to reference inlets and outlets (<b>matrix</b> was modeled   after <b>switch</b> and <b>gate</b>). When these two objects are connected together   this difference is seamless because <b>matrix</b> translates configuration data   between the two objects. However, if you are using direct references to these   objects concurrently, this factor must be considered. <h3>Orientation</h3><p>There are two orientations between <b>matrixctrl</b> and <b>matrix</b>. </p><ol>  <li>Columns represent matrix inlets and rows as matrix outlets</li>  <li>Rows as inlets and columns as outlets.</li></ol><p>The default orientation is columns as inlets.</p><table width="95%" border="1" cellspacing="0" cellpadding="2">  <tr>     <td><img src="matriximgs/mctop_ex.gif"></td>    <td><img src="matriximgs/mcleft_ex.gif"></td>  </tr>  <tr>     <td><code>[mctop]</code> tells <b>matrix</b> to interpret <b>matrixctrl</b>       columns as <b>matrix</b> inlets, and rows as outlets. Since it is the default       configuration, it is not necessary to send it an initial <code>[mctop]</code>       message before using the matrix configuration commands.</td>    <td><code>[mcleft]</code> tells <b>matrix</b> to interpret <b>matrixctrl</b>       rows as <b>matrix</b> inlets, and columns as outlets. The initial set of       commands begins by telling <b>matrix</b> that <b>matrixctrl</b> is oriented       with rows as inlets and columns as outlets.</td>  </tr>  <tr>     <td colspan="2"> <code>[configOnChg 1]</code> tells <b>matrix</b> to send       configuration streams out the control outlet whenever its configuration       is changed by one of its own commands.       <p><code>[1, = 2 4 8]</code> is two messages. The first tells <b>matrix</b>         that subsequent configuration commands will affect inlet 1. The second         tells matrix to open outlets 2, 4, and 8 only for that inlet.</p>      <p><code>[2, 3 5 7]</code> tells matrix to open only outlets 3, 5, and 7         for inlet 2.</p>    </td>  </tr></table><p>The simplest way to set up matrix with matrixctrl is to:</p><ol>  <li> create the two objects</li>  <li>create a<code> [prepend mctop]</code> or<code> [prepend mcleft]</code> object.</li>  <li>connect the objects according to the example above.</li>  <li>send matrix a<code> [configOnChg 1]</code> message.</li></ol><p>You may use matrixctrl or matrix's built-in command messages to configure matrix.   Matrixctrl will reflect any changes made to matrix if you use matrix's commands.<h3>Matrixctrl as a window into matrix</h3><p><b>matrixctrl</b> does not need to be the full size of <b>matrix</b>. By using   the <code>mcoffset</code> message you can move <b>matrixctrl</b> around the   <b>matrix</b>. <p> <p>There are several new messages related to the integration of <b>matrix</b>   with <b>matrixctrl</b>: <table border="1" cellspacing="0">  <tr>     <td width="10">&nbsp;</td>    <td><font face="Courier New, Courier, mono">configOnChg arg1</font></td>    <td>       <p>This message takes one argument: 0 or 1. <code>[configOnChg 1]</code><font face="Courier New, Courier, mono">         </font> tells <b>matrix</b> to output configuration changes when it receives         one of its own configuration messages. If this is off (0), <b>matrix</b>         will not update <b>matrixctrl</b> unless you send matrix a <code>getconfig</code>         message. Turning it off is useful if you need to use matrix's configuration         commands in rapid succession and are concerned with CPU efficiency.</p>    </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><font face="Courier New, Courier, mono">getconfig</font></td>    <td>This tells <b>matrix</b> to output its current configuration. If you reconfigure       <b>matrix</b> or <b>matrixctrl</b> while <code>configOnChg</code> is disabled,       and need to update <b>matrixctrl</b>, send <b>matrix</b> <code>getconfig</code>.</td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><font face="Courier New, Courier, mono">mctop [arg1 arg2 arg3 ...]</font></td>    <td>       <p><code>mctop</code> takes the three arguments output by the left outlet         of <b>matrixctrl</b> and tells <b>matrix</b> to interpret them as:      <ul>        <li>arg1: on/off (0 or 1)</li>        <li>arg2: column (h) = inlet</li>        <li>arg3: row (v) = outlet</li>        <li>... additional <b>matrixctrl</b> style arguments in groups of three           as: on/off, h, v</li>      </ul>      <p>NB: This is the default orientation.</p>    </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><font face="Courier New, Courier, mono">mcleft arg1 arg2 arg3</font></td>    <td>       <p><font face="Courier New, Courier, mono">mcleft</font> takes the three         arguments output by the left outlet of <b>matrixctrl</b> and tells <b>matrix</b>         to interpret them as:</p>      <ul>        <li>arg1: on/off (0 or 1)</li>        <li>arg2: row (v) = inlet</li>        <li>arg3: column (h) = outlet</li>        <li>... additional <b>matrixctrl</b> style arguments in groups of three           as: on/off, v, h</li>      </ul>      <p>If you are using this orientation, you must send <b>matrix</b> an <font face="Courier New, Courier, mono">mcleft</font>         message (with or without arguments) before doing any configuration of         matrix. This tells <b>matrix</b> that this orientation is in effect. You         can also click <b>matrixctrl</b> to open and close a cell. Once <b>matrix</b>         receives any <font face="Courier New, Courier, mono">mcleft</font> message         it will know the orientation. It will need this before you configure <b>matrix</b>         with its own commands if you expect <b>matrix</b> to update <b>matrixctrl</b>         correctly. </p>    </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><font face="Courier New, Courier, mono">mcoffset arg1 arg2 arg3 arg4</font></td>    <td>       <p>If <b>matrixctrl</b> does not cover the entire <b>matrix</b>, use <code>mcoffsetx</code>         to tell matrix what part of the <b>matrix</b> this <b>matrixctrl</b> covers.</p>      <ul>        <li>arg1 is the inlet offset.</li>        <li>arg2 is the outlet offset</li>        <li>arg3 is the inlet size of <b>matrixctrl</b></li>        <li>arg4 is the outlet size of <b>matrixctrl</b> </li>      </ul>      <p><code>mcoffset</code> is used if you have a large <b>matrix</b> that         you want to control with a small <b>matrixctrl</b>. You can use <b>matrixctrl</b>         as a moveable window inside the <b>matrix</b>.       <p> The first two arguments tell <b>matrix</b> where the first virtual <b>matrixctrl</b>         cell is within <b>matrix</b> (top-left for <code>mctop</code>, bottom-left         for <code>mcleft</code> orientation). The arguments correspond to <b>matrix</b>         ordinal values, not <b>matrixctrl</b>'s index values. Thus, the default         position is 1, 1. The first argument is the inlet and the second the outlet.         This is the case no matter how <b>matrixctrl</b> is oriented.     </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td>&nbsp;</td>    <td>       <p>The second two arguments represent the size of <b>matrixctrl</b>. When         initiated, <b>matrix</b> assumes that <b>matrixctrl</b> is the same size         as <b>matrix</b>. If this is not the case (which is why you are now using         <font face="Courier New, Courier, mono">mcoffset</font>), then <b>matrix</b>         needs to be told the dimensions of <b>matrixctrl</b>. The dimensions are         in accordance with <b>matrix</b>, not <b>matrixctrl</b>. The first argument         (<font face="Courier New, Courier, mono">arg3</font> of <font face="Courier New, Courier, mono">mcoffset</font>)         is the number of <b>matrix</b> <i>inlets</i> <b>matrixctrl</b> covers;         the second (<font face="Courier New, Courier, mono">arg4</font>), the         <i>outlets</i>.     </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><font face="Courier New, Courier, mono">clear</font></td>    <td>      <p>If you want to clear the entire <b>matrix</b>, send <font face="Courier New, Courier, mono"><code>[clear]</code></font>         or <code>[all, -]</code> to <b>matrix</b>. This will clear both the entire         <b>matrix</b> and <b>matrixctrl</b>.</p>      <p><b>Matrix</b> ignores <code>clear</code> when sent though data inlets,         except that it is sent to any open outlets associated with the inlet.</p>      <p> (NB: in conjunction with <b>matrixctrl</b>, <code>clear</code> works         faster than <code>[all, -]</code> because <b>matrix</b> sends <b>matrixctrl</b> a <font face="Courier New, Courier, mono">clear</font>         message instead of a list of closed nodes.) </p>    </td>  </tr>  <tr>    <td width="10">&nbsp;</td>    <td>&nbsp;</td>    <td>When <b>matrixctrl</b> is smaller than <b>matrix</b> you need to be wary       of the use of <code>clear</code>. Both <b>matrix</b> and <b>matrixctrl</b>       accept this message. If you send <b>matrixctrl</b> a <code>clear</code>       message and it is smaller than <b>matrix</b>, <b>matrix</b> will only be       cleared in the range of the current position of <b>matrixctrl</b>. In other       words, the window that is represented by <b>matrixctrl</b> is cleared. The       rest of the matrix is left alone.</td>  </tr></table><h3>Multiple matrixctrls for a single matrix</h3><p><b>Matrix</b> can be connected to as many as 17 <b>matrixctrls</b> that configure   <b>matrix</b>. In this way, you can use several smaller <b>matrixctrls</b> in   a visual configuration that may be different than a straightforward <b>matrix</b>.   Or, you can have several patchers access the same <b>matrix</b>.</p><p>All 17 <b>matrixctrls</b> are independent, yet a change in one will be reflected   in any other <b>matrixctrl</b> that overlaps. That is, <b>matrixctrls</b> may   overlap regions of <b>matrix</b> nodes. It is possible, for example, to have   two patchers that have a <b>matrixctrl</b> that will cover the entire matrix.   Updating one <b>matrixctrl</b> will be reflected in the other.</p><p>It is also possible to have several non-overlapping <b>matrixctls</b>, or a   master control with several smaller controllers that represent portions of the   matrix.</p><p>To use multiple <b>matrixctrls</b> you need to use modified commands, and also   route <b>matrix</b> configuration output to each <b>matrixctrl</b>.</p><table border="1" cellspacing="0">  <tr>     <td width="10">&nbsp;</td>    <td><code>configOnChg arg1 [arg2...]</code></td>    <td>       <p><b>Matrixctrls</b> are referenced 0-16. Ctrl 0 is the default and if         <code>configOnChg</code> has only one argument (0 or 1 representing on         or off) <b>matrix</b> assumes that ctrl 0 is being addressed.</p>      <p>If <code>configOnChg</code> has more than one argument, the remaining         arguments represent a list of <b>matrixctrls</b> to turn on or off.</p>      <p>Example:</p>      <ul>        <li><code>[configOnChg 1 0 2 5]</code> turns on ctrl 0, 2, and 5. All           others are unaffected.</li>        <li><code>[configOnChg 0 2 5]</code> turns off ctrl 2 and 5.</li>      </ul>      <p>It is important to turn off (or leave off) any <b>matrixctrls</b> that         are not being used. Any ctrl that is on will cause <b>matrix</b> to send         configuration data out its control outlet whenever a configuration is         made. For the most part, <b>matrix</b> is very efficient about this, but         it is more efficient if unnecessary controllers are off.</p>    </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><code>getconfig arg1</code></td>    <td>       <p><code>getconfig</code> takes one argument: the controller for which you         want <b>matrix</b> to output its current configuration. This is generally         not needed.</p>    </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><code>mctopx arg1 [arg2 arg3 arg4...]</code></td>    <td>       <p><code>mctopx</code> takes at least four arguments. The first argument         is the controller that is initiating a configuration change, the rest         are the values output by <b>matrixctrl. </b>       <p><code>mctopx</code> may also take a <b>matrixctrl</b> style list for         configuring multiple nodes with one list.      <ul>        <li>arg1: matrixctrl (1-16). Use <code>mctop</code> (no 'x') for the default           (0).</li>        <li>arg2: 0 or 1 (on or off)</li>        <li>arg3: column (h) = inlet</li>        <li>arg4: row (v) = outlet</li>        <li>... in threes: on/off, h, v</li>      </ul>      </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><code>mcleftx arg1 arg2 arg3</code></td>    <td>       <p><code>mcleftx</code> takes four arguments. The first argument is the         control that is initiating a configuration change, the rest are the values         output by <b>matrixctrl<font face="Courier New, Courier, mono">.</font></b></p>      <p><code>mcleftx</code> may also take a <b>matrixctrl</b> style list for         configuring multiple nodes with one list. </p>      <ul>        <li>arg1: matrixctrl (1-16). Use <code>mcleft</code> (no 'x') for the           default (0).</li>        <li>arg2: 0 or 1 (on or off</li>        <li>arg3: row (v) = inlet</li>        <li>arg4: column (h) = outlet</li>        <li>... in threes: on/off, h, v</li>      </ul>      </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><code>mcoffsetx arg1 arg2 arg3 arg4 arg5</code></td>    <td>       <p>If a <b>matrixctrl</b> does not cover the entire matrix, use <code>mcoffsetx</code>         to tell <b>matrix</b> what part of the matrix this <b>matrixctrl</b> covers.</p>      <ul>        <li>arg1: matrixctrl (1-16). Use <code>mcoffset</code> (no 'x') for the           default (0).</li>        <li>arg2 is the inlet offset.</li>        <li>arg3 is the outlet offset</li>        <li>arg4 is the inlet size of <b>matrixctrl</b></li>        <li>arg5: is the outlet size of <b>matrixctrl</b> </li>      </ul>      <p><code>mcoffsetx</code> is used if you have a large <b>matrix</b> that         you want to control with a small <b>matrixctrl</b>. You can use <b>matrixctrl</b>         as a moveable window inside the <b>matrix</b>.       <p> The second two arguments tell <b>matrix</b> where the first virtual         <b>matrixctrl</b> cell is within <b>matrix</b> (top-left for <code>mctop</code>,         bottom-left for <code>mcleft</code> orientation). The arguments correspond         to <b>matrix</b> ordinal values, not <b>matrixctrl</b>'s index values.         Thus, the default position is 1, 1. The first argument is the inlet and         the second the outlet. This is the case no matter how <b>matrixctrl</b>         is oriented.       </td>  </tr>  <tr>     <td width="10">&nbsp;</td>    <td><code></code></td>    <td>       <p>The last two arguments represent the size of <b>matrixctrl</b>. When         initiated, <b>matrix</b> assumes that <b>matrixctrl</b> is the same size         as <b>matrix</b>. If this is not the case (which is why you are now using         mcoffset), then it needs to be told the dimensions of <b>matrixctrl</b>.         The dimensions are in accordance with <b>matrix</b>, not <b>matrixctrl</b>.         The first argument (arg4 of mcoffsetx) is the number of <i>inlets</i>         <b>matrixctrl</b> covers; the second (arg5), the <i>outlets</i>. See mcoffset         for diagram.    </td>  </tr></table><h3>Routing matrix configuration data to the proper matrixctrl in a multi-control   configuration. </h3><p>Finally, you must route configuration data from <b>matrix</b> to the correct   <b>matrixctrl</b>. This is done using a Max <b>route</b> object. A simple list   is output for controller zero, <b>matrix</b> prepends to all others, the symbol   'mcN' where 'N' is the controller (1-16) that <b>matrix</b> is trying to update.</p><hr><h2>Spray function</h2><p>If you have a list (numbers or symbols) that you want to distribute to the   matrix outlets, one element per outlet, set one or more inlets to <font face="Courier New, Courier, mono">sprayon</font>.   <b>Matrix</b> will treat the inlet as if you were using <b>spray</b> instead   of <b>matrix</b>. There are, however, some important differences that must be   kept in mind: <ul>  <li>The outlets that are sprayed to are determined by the outlet configuration     of the sprayed inlet. Thus, if data inlet 2 is set to spray, and outlets 3,     5, and 7 are open, then the first three members of the spray list will go     to outlets 3, 5, and 7 respectively. </li>  <li>The first number in a Max <b>spray</b> object list is an index to the first     <b>spray</b> outlet. With <b>matrix</b>, the first member of a list is always     sent to the first open matrix outlet when the first member is an int or float.     In other words, all members of the list are sprayed. </li>  <li><b>Spray</b> only takes integers. <b>Matrix</b> will spray anything. If     the list begins with a symbol (non-int or float) matrix will ignore the first     member. For this reason, prepend the symbol 'spray' to the list before sending     it to matrix. </li></ul><table width="95%" border="1" cellspacing="0" cellpadding="2">  <tr>     <td colspan="2">       <p>The examples below demonstrate several things about <b>matrix</b> spray         facility.</p>      <p>Matrixctrl is mapped to matrix as 2 rows (inlets) and 8 columns (outlets).         For this a [<font face="Courier New, Courier, mono">prepend</font> <font face="Courier New, Courier, mono">mcleft</font>]         message interfaces between them.</p>      <table border="0" cellspacing="0" cellpadding="2">        <tr>           <td><img src="matriximgs/spray_ex1.gif" width="360" height="123"></td>          <td>             <p>The arguments for matrix:</p>            <ol>              <li>2 inlets</li>              <li>8 outlets</li>              <li>1 = allow configuration directly from each inlet</li>              <li>1 = place control outlet on the left</li>            </ol>          </td>        </tr>      </table>      <p>Loadbang sends 7 messages to matrix:</p>      <ol>        <li><font face="Courier New, Courier, mono">[mcleft]</font> lets <b>matrix</b>           know the orientation of <b>matrixctrl</b>. This is important because           the next set of messages will only update <b>matrixctrl</b> correctly           if <b>matrix</b> knows this.</li>        <li><font face="Courier New, Courier, mono">[configOnChg 1]</font> tells           <b>matrix</b> to output configuration data any time it receives configuration           change from its own command set.</li>        <li><font face="Courier New, Courier, mono">[1]</font> tells <b>matrix</b>           that the following commands will effect inlet 1.</li>        <li><font face="Courier New, Courier, mono">[= 2 4 8]</font> opens outlets           2, 4, and 8 for inlet 1</li>        <li><font face="Courier New, Courier, mono">[2]</font> tells <b>matrix</b>           that the following commands will effect inlet 2.</li>        <li><font face="Courier New, Courier, mono">[= 3 5 7]</font> opens outlets           3, 5, and 7 for inlet 2.</li>        <li>[<font face="Courier New, Courier, mono">sprayon</font>] tells <b>matrix</b>           that inlet 2 is treated as a spray inlet.</li>      </ol>      </td>  </tr>  <tr>     <td><img src="matriximgs/spray_ex2.gif" width="361" height="189"></td>    <td>       <p>The message <font face="Courier New, Courier, mono">[6 five for 3.2 uno]</font>         is sent to both matrix inlets. Since inlet 1 has outlets open for 2, 4,         and 8; the the entire list is sent out all three outlets.</p>      <p>Inlet 2 is a spray inlet set to distribute the contents to outlets 3,         5, and 7. Since the first member is an int, it will be sent to outlet         3, etc. The last two members of the list are ignored because there are         not enough assigned outlets for them.</p>      <p>&nbsp;</p>    </td>  </tr>  <tr>     <td><img src="matriximgs/spray_ex3.gif" width="360" height="130"></td>    <td>      <p>The message <font face="Courier New, Courier, mono">[hello there world]</font>         is sent to both inlets. Since inlet 1 is a normal inlet, the message is         distributed as in the example above.</p>      <p>Since the first member is a symbol and the 2nd inlet is a spray inlet,         it is necessary to prepend the symbol <font face="Courier New, Courier, mono">spray</font>         to it before sending it through. Otherwise <font face="Courier New, Courier, mono">hello</font>         will be ignored and <font face="Courier New, Courier, mono">there</font>         and <font face="Courier New, Courier, mono">world</font> will be distributed         to outlets 3 and 5 respectively.</p>    </td>  </tr>  <tr>     <td>&nbsp;</td>    <td>NB: for consistency, you may prepend spray to all lists sent as spray,       regardless of the data type of the first element.</td>  </tr></table><p>&nbsp;</body></html>
max v2;#N vpatcher 40 62 746 516;#P setbglock 1;#P comment 315 249 84 196617 display sub-patch;#P comment 585 54 104 196617 mmparse \, mmformat;#P comment 405 292 275 196617 knobmode <value/delta> - switch between absolute and delta format for knob values;#P newex 300 29 74 196617 r numboxes_in;#P comment 9 170 351 196617 mmhub keeps track of all the pages \, and sends/receives MIDI. connect it to a midiin/midiout pair that will reach the motormix.;#P comment 9 154 356 196617 each mmpm object contains one page of parameters. use as many as you need.;#P hidden newex 331 185 45 196617 loadbang;#P hidden message 342 205 28 196617 open;#P hidden newex 342 224 45 196617 pcontrol;#N vpatcher 630 145 855 442;#P hidden newex 154 425 27 196617 + 1;#P hidden newex 27 411 27 196617 + 9;#P hidden newex 54 390 27 196617 * 8;#P hidden newex 54 411 28 196617 pack;#P hidden newex 27 390 27 196617 + 0;#P hidden newex 27 368 65 196617 unpack 0 0 0;#P hidden newex 181 401 27 196617 * 8;#P hidden newex 190 426 28 196617 pack;#P hidden newex 154 401 27 196617 + 0;#P hidden newex 154 379 65 196617 unpack 0 0 0;#P hidden newex 371 105 28 196617 pack;#P hidden newex 371 83 29 196617 + 64;#P hidden newex 344 62 65 196617 unpack 0 0 0;#P hidden newex 319 317 28 196617 pack;#P hidden newex 319 295 29 196617 + 49;#P hidden newex 292 274 65 196617 unpack 0 0 0;#P hidden newex -68 247 28 196617 pack;#P hidden newex -68 225 29 196617 + 41;#P hidden newex -95 204 65 196617 unpack 0 0 0;#P hidden newex -69 148 28 196617 pack;#P hidden newex -69 126 29 196617 + 59;#P hidden newex -96 105 65 196617 unpack 0 0 0;#P hidden message -181 28 102 196617 button toggle 1 to 68;#P hidden inlet 4 198 15 0;#P hidden message 1 253 298 196617 window size 184 80 797 651 \, window flags grow \, window exec;#P hidden message 1 240 314 196617 window size 630 145 855 442 \, window flags nogrow \, window exec;#P hidden newex 286 371 60 196617 prepend set;#N thispatcher;#Q end;#P hidden newobj 286 349 59 196617 thispatcher;#P hidden button 359 240 15 0;#P hidden newex 374 173 58 196617 split 63 67;#P hidden newex 374 194 28 196617 - 63;#P hidden newex 374 240 55 196617 pack 0 0 0;#P hidden newex 374 215 27 196617 % 8;#P user matrixctrl 199 44 17 67 ‘glowing cells.pct’ MatrixDefaultBkgnd.pct 17 67 16 16 1 4 17 17 0 0 48 2 0 0;#P hidden button -170 172 15 0;#P hidden newex -155 105 58 196617 split 56 62;#P hidden newex -155 126 28 196617 - 56;#P hidden newex -155 172 55 196617 pack 0 0 0;#P hidden newex -155 147 27 196617 % 8;#P user matrixctrl 14 44 17 80 ‘glowing cells.pct’ MatrixDefaultBkgnd.pct 17 80 16 16 1 5 16 16 0 0 48 2 0 0;#P hidden newex 413 38 52 196617 split 8 39;#P hidden button 258 242 15 0;#P hidden newex 273 175 58 196617 split 48 55;#P hidden newex 273 196 28 196617 - 48;#P hidden newex 273 242 55 196617 pack 0 0 0;#P hidden newex 273 217 27 196617 % 8;#P user matrixctrl 188 145 17 128 ‘glowing cells.pct’ MatrixDefaultBkgnd.pct 17 128 16 16 1 8 16 16 0 0 48 2 0 0;#P hidden button -170 271 15 0;#P hidden newex -155 204 58 196617 split 40 47;#P hidden newex -155 225 28 196617 - 40;#P hidden newex -155 271 55 196617 pack 0 0 0;#P hidden newex -155 246 27 196617 % 8;#P user matrixctrl 24 145 17 128 ‘glowing cells.pct’ MatrixDefaultBkgnd.pct 17 128 16 16 1 8 16 16 0 0 48 2 0 0;#P hidden newex 413 61 27 196617 - 8;#P hidden newex 413 109 64 196617 pack 0 0 0;#P hidden newex 440 86 27 196617 / 8;#P hidden newex 413 86 27 196617 % 8;#P user matrixctrl 41 73 146 72 ‘glowing cells.pct’ MatrixDefaultBkgnd.pct 146 72 16 16 8 4 18 17 2 2 48 2 0 0;#P hidden newex 254 2 64 196617 pack 0 0 0;#P user matrixctrl 41 25 146 20 ‘glowing cells.pct’ MatrixDefaultBkgnd.pct 146 20 16 16 8 1 18 17 2 2 48 2 0 0;#P hidden newex 227 31 163 196617 spray 9;#P user pictctrl 167 49 20 20 silver640.pct 200 0 1 2 90 0 41 0 20 20 127 0 1 32 2;#P user pictctrl 149 49 20 20 silver640.pct 100 0 1 2 90 0 23 0 20 20 127 0 1 32 2;#P user pictctrl 131 49 20 20 silver640.pct 620 0 1 2 90 0 126 0 20 20 127 0 1 32 2;#P user pictctrl 113 49 20 20 silver640.pct 560 0 1 2 90 0 112 0 20 20 127 0 1 32 2;#P user pictctrl 95 49 20 20 silver640.pct 0 0 1 2 90 0 2 0 20 20 127 0 1 32 2;#P user pictctrl 77 49 20 20 silver640.pct 40 0 1 2 90 0 9 0 20 20 127 0 1 32 2;#P user pictctrl 59 49 20 20 silver640.pct 260 0 1 2 90 0 52 0 20 20 127 0 1 32 2;#P hidden newex -205 70 163 196617 funnel 9;#P user pictctrl 41 49 20 20 silver640.pct 0 0 1 2 90 0 0 0 20 20 127 0 1 32 2;#P hidden newex 210 128 140 196617 spray 9;#P user uslider 150 145 18 112 128 1 0 10;#P user uslider 132 145 18 112 128 1 0 10;#P user uslider 114 145 18 112 128 1 0 10;#P user uslider 96 145 18 112 128 1 0 10;#P user uslider 78 145 18 112 128 1 0 10;#P user uslider 60 145 18 112 128 1 0 10;#P user uslider 42 145 18 112 128 1 0 10;#P user uslider 168 145 18 112 128 1 0 10;#P hidden newex 35 280 140 196617 funnel 9;#P user panel 0 0 225 297;#X brgb 53 52 56;#X frgb 0 0 0;#X border 1;#X rounded 0;#X shadow 0;#X done;#P hidden newex -161 -26 75 196617 mmpm minimm;#P hidden newex -161 -50 62 196617 r submix_in;#P hidden comment -22 -57 58 196617 page "faderbank";#P hidden newex 254 -19 27 196617 % 8;#P hidden newex 60 -38 27 196617 - 1;#P hidden newex 281 -19 27 196617 / 8;#P hidden newex 254 -44 45 196617 split 0 7;#P hidden newex 60 -60 38 196617 unpack;#P hidden connect 19 0 20 1;#P hidden connect 65 0 66 0;#P hidden connect 50 0 54 0;#P hidden connect 37 0 41 0;#P hidden connect 21 0 20 2;#P hidden connect 9 0 7 0;#P hidden connect 66 0 7 0;#P hidden connect 6 0 7 0;#P hidden connect 3 0 53 0;#P hidden connect 53 0 52 0;#P hidden connect 52 0 50 0;#P hidden connect 54 0 51 0;#P hidden connect 3 0 40 0;#P hidden connect 40 0 39 0;#P hidden connect 39 0 37 0;#P hidden connect 41 0 38 0;#P hidden connect 22 0 20 3;#P hidden connect 50 0 51 1;#P hidden connect 37 0 38 1;#P hidden connect 20 0 7 1;#P hidden connect 23 0 20 4;#P hidden connect 0 1 51 2;#P hidden connect 0 1 38 2;#P hidden connect 24 0 20 5;#P hidden connect 69 0 7 2;#P hidden connect 72 0 7 2;#P hidden fasten 75 0 7 2 324 340 -32 340 -32 -36 -92 -36;#P hidden connect 78 0 7 2;#P hidden connect 85 0 7 2;#P hidden connect 81 0 7 2;#P hidden connect 49 0 67 0;#P hidden connect 36 0 70 0;#P hidden connect 25 0 20 6;#P hidden connect 26 0 20 7;#P hidden connect 67 1 68 0;#P hidden connect 68 0 69 0;#P hidden connect 70 1 71 0;#P hidden connect 71 0 72 0;#P hidden connect 27 0 20 8;#P hidden connect 67 2 69 1;#P hidden connect 70 2 72 1;#P hidden connect 65 0 63 0;#P hidden connect 51 0 49 0;#P hidden connect 38 0 36 0;#P hidden connect 31 0 83 0;#P hidden connect 83 0 84 0;#P hidden connect 84 0 87 0;#P hidden connect 30 0 29 0;#P hidden connect 28 1 19 0;#P hidden connect 34 0 31 0;#P hidden connect 18 1 11 0;#P hidden connect 86 0 84 1;#P hidden connect 11 0 9 1;#P hidden connect 83 1 86 0;#P hidden connect 87 0 85 0;#P hidden connect 28 2 21 0;#P hidden connect 7 2 0 0;#P hidden connect 0 0 3 0;#P hidden connect 18 2 12 0;#P hidden connect 12 0 9 2;#P hidden connect 83 2 85 1;#P hidden connect 28 3 22 0;#P hidden connect 18 3 13 0;#P hidden connect 13 0 9 3;#P hidden connect 28 4 23 0;#P hidden connect 18 4 14 0;#P hidden connect 14 0 9 4;#P hidden connect 28 5 24 0;#P hidden connect 18 5 15 0;#P hidden connect 15 0 9 5;#P hidden connect 28 6 25 0;#P hidden connect 16 0 9 6;#P hidden connect 18 6 16 0;#P hidden connect 17 0 9 7;#P hidden connect 28 7 26 0;#P hidden connect 18 7 17 0;#P hidden connect 29 0 79 0;#P hidden connect 79 0 80 0;#P hidden connect 80 0 88 0;#P hidden connect 10 0 9 8;#P hidden connect 28 8 27 0;#P hidden connect 18 8 10 0;#P hidden connect 82 0 80 1;#P hidden connect 79 1 82 0;#P hidden connect 44 0 42 0;#P hidden connect 88 0 81 0;#P hidden connect 57 0 55 0;#P hidden connect 79 2 81 1;#P hidden connect 7 0 18 0;#P hidden connect 7 1 28 0;#P hidden connect 3 0 1 0;#P hidden connect 1 0 4 0;#P hidden connect 4 0 30 0;#P hidden connect 43 0 47 0;#P hidden connect 3 0 46 0;#P hidden connect 46 0 45 0;#P hidden connect 45 0 43 0;#P hidden connect 47 0 44 0;#P hidden connect 1 0 2 0;#P hidden connect 2 0 30 1;#P hidden connect 63 0 61 0;#P hidden connect 64 0 61 0;#P hidden connect 61 0 62 0;#P hidden connect 42 0 73 0;#P hidden connect 43 0 44 1;#P hidden connect 0 1 30 2;#P hidden connect 0 1 44 2;#P hidden connect 73 1 74 0;#P hidden connect 74 0 75 0;#P hidden connect 73 2 75 1;#P hidden connect 55 0 76 0;#P hidden connect 56 0 60 0;#P hidden connect 76 1 77 0;#P hidden connect 77 0 78 0;#P hidden connect 3 0 59 0;#P hidden connect 59 0 58 0;#P hidden connect 58 0 56 0;#P hidden connect 60 0 57 0;#P hidden connect 76 2 78 1;#P hidden connect 56 0 57 1;#P hidden connect 3 0 48 0;#P hidden connect 48 0 35 0;#P hidden connect 35 0 32 0;#P hidden connect 32 0 34 0;#P hidden connect 0 1 57 2;#P hidden connect 35 0 33 0;#P hidden connect 33 0 34 1;#P hidden connect 0 1 34 2;#P pop 1;#P newobj 331 263 51 196617 p minimm;#P comment 92 31 21 196617 and;#B color 10;#P comment 47 65 31 196617 v.1.0;#B color 10;#P comment 9 65 38 196617 by jhno;#B color 10;#P comment 489 123 110 196617 values for page named "number box display";#P comment 9 383 240 196617 refresh - sends all current values to the motormix. (in normal use this should not be necessary.);#N vpatcher 72 67 590 599;#P origin 0 1;#P comment 30 420 118 196617 ...and just a reminder \,;#P comment 56 471 245 196617 PLAY * ESCAPE toggles Pro Tools mode on and off.;#P comment 56 459 245 196617 SHIFT performs self-demo.;#P comment 56 447 245 196617 during power up:;#P comment 30 375 444 196617 if the motormax does seem to be malfunctioning in some way \, here are some tests you can run to verify basic operations. these are also included in the motormixmax README document.;#N vpatcher 40 55 545 390;#P origin 0 25;#P comment 22 278 444 196617 If Motor Mix passes these tests then you can look for problems elsewhere.;#P comment 22 206 444 196617 4.) Fader test. Move the faders \, and you should see their position reading on the LCD go from 0 to 255. Press the “SHIFT” and “UNDO” switches to end the test. Remove the MIDI “jumper” cable and re-patch the MIDI cables. Connect the Motor Mix MIDI out jack to the MIDI input on your computer MIDI interface. Connect your computer MIDI out jack to the MIDI input jack on Motor Mix.;#P comment 22 147 444 196617 3.) Pots and Encoder test. Rotate the pots slowly \, and the faders should move up and down. Rotate the encoder \, and all the faders should move up and down. Push all the switches \, and all the LEDs should light. Push the encoder \, and all the faders should move repeatedly from bottom to top. Press the “SHIFT” and “UNDO” switches to end the test.;#P comment 22 114 444 196617 2.) MIDI ports test. Motor Mix should report “MIDI IS O.K. Press the “SHIFT” and “UNDO” switches to end the test.;#P comment 22 79 444 196617 1.) Memory (SRAM) test. Motor Mix should report “SRAM IS O.K”. Press the “SHIFT” and “UNDO” switches to end the test.;#P comment 22 32 444 196617 If Motor Mix does not respond properly \, you can run the built in self-test in Motor Mix. Simply connect the MIDI output directly into the MIDI input on Motor Mix and apply power. The LCD should show ”Performing Customer self test”. Then it will perform:;#P pop;#P newobj 218 407 65 196617 p diagnostics;#P comment 30 198 444 196617 there is also a "ping" command to mmhub. this causes it to send a handshake request \, along with a message to print to the LCD screen. if these reach the motormix \, you will see the letters "P" and "I" across the top of the LCD \, and the motormix will send a return message.;#P comment 30 117 444 196617 if you are having trouble getting the motormix to communicate with max \, the first thing to check is that the unit is not in "protools mode." to toggle between normal and protools mode \, hold down "play" and "escape" during power up.;#P comment 30 241 444 196617 if the original mmhub receives this return message \, it will output a bang from its right outlet \, indicating success. it will also write "N" and "G" across the bottom of the LCD display \, and then send a refresh after about two seconds which should restore the screen to the previous display.;#P comment 30 292 444 196617 just before refreshing the display \, you may see another message flash very briefly. this is a spurious warning from the motormix that it has lost communication with the host. it seems to be an unavoidable side-effect of the ping. if \, for example \, MIDI was working from max to the motormix \, but not from the motormix to max \, this message might pop up and stay \, until some kind of input changed the LCD display. the machine should still respond normally at all times. i have never seen the motormix "crash.";#P comment 30 62 444 196617 the "refresh" command instructs mmhub to send all current motormix parameters \, in case the display somehow gets "out of sync" with max. this should not ordinarily occur \, since max continuously updates the motormix \, and vice-versa.;#P comment 30 21 444 196622 troubleshooting;#P comment 30 161 444 196617 the "submix" display window in this help file \, or the vmix example patch \, are probably the best tools to verify MIDI communications.;#P pop;#P newobj 256 393 105 196617 p if_things_work_not;#P comment 9 413 243 196617 ping - verify MIDI communication to/from motormix;#P comment 161 236 38 196617 update umenu;#P hidden newex 145 202 45 196617 t b clear;#N vpatcher 131 134 681 677;#P origin 0 29;#P number 90 232 28 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 62 232 28 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 62 211 38 196617 unpack;#P newex 23 190 88 196617 mmpm knobmodes;#P comment 143 471 376 196617 7 - descending bar graph;#P comment 143 457 376 196617 6 - ascending bar graph;#P comment 143 443 376 196617 5 - centered spreading bar;#P comment 143 373 376 196617 0 - left-justified horizontal bar graph;#P comment 143 387 376 196617 1 - centered horizontal bar graph;#P comment 143 401 376 196617 2 - right justified horizontal bar graph;#P comment 143 415 376 196617 3 - left-to-right moving single vertical line;#P comment 143 429 376 196617 4 - left-justified double vertical line;#P comment 143 495 376 196617 finally \, "knobmode -1" disables the built-in value display. this is especially useful if you want to use the lower row of the lcd for other purposes.;#P comment 143 67 376 196617 in "value" mode \, each knob outputs an absolute value between 0 and 127 - the usual behavior for MIDI controllers.;#P comment 143 202 376 196617 mmpm receives knob messages in its middle inlet for display purposes. the motormix has eight built-in display modes \, each of which presents a different style of graphic representation in the lcd display. these are presented in the lower row of the lcd \, above each knob. note that they will draw over any text that you have written to the lower row \, unless you disable the display (knobmode -1).;#P comment 143 21 376 196617 the current mmpm sends messages from its middle outlet in response to knob movement on the motormix. mmpm can output knob values in two different modes: "value" and "delta".;#N vpatcher 58 88 634 543;#P comment 132 286 329 196617 the "ints" page shows an absolute MIDI value \, 0-127 \, above each knob. it demonstrates the use of knobmode -1 to turn off the motormix's built-in graphic display.;#P comment 34 365 501 196617 the "floats" page uses the delta knobmode \, and multiplies each knob value by its corresponding slider for variable precision. with the fader all the way down \, each "tick" of the knob (minimum delta) only changes the output by +/- 0.0001. with the fader all the way up \, you can get to +/- 10 \, 0 pretty quickly. the precision and curve can be easily customized with a little math in max.;#P newex 258 234 55 196617 s mmhub;#N vpatcher 25 48 445 312;#P origin -82 10;#P hidden newex 113 106 44 196617 select 9;#P hidden newex 316 212 65 196617 precisfloat 8;#P hidden newex 316 187 65 196617 precisfloat 7;#P hidden newex 316 162 65 196617 precisfloat 6;#P hidden newex 316 137 65 196617 precisfloat 5;#P hidden newex 316 112 65 196617 precisfloat 4;#P hidden newex 316 87 65 196617 precisfloat 3;#P hidden newex 316 62 65 196617 precisfloat 2;#P hidden newex 316 37 65 196617 precisfloat 1;#P hidden newex 151 155 155 196617 sprintf lcd 40 precision: %f sp 7;#P hidden message 16 133 20 196617 \$1;#N comlet motormix message output;#P hidden outlet 16 180 15 0;#N comlet precision input (0-127);#P hidden inlet 144 71 15 0;#P hidden newex 16 155 135 196617 sprintf lcd knob %d: %f sp 7;#N comlet delta input (0 +/- value);#P hidden inlet 159 71 15 0;#P hidden fasten 14 1 4 0 152 129 21 129;#P hidden connect 4 0 1 0;#P hidden connect 1 0 3 0;#P hidden connect 5 0 3 0;#P hidden connect 2 0 14 0;#P hidden connect 0 0 14 0;#P connect 13 1 1 1;#P connect 12 1 1 1;#P connect 11 1 1 1;#P connect 10 1 1 1;#P connect 9 1 1 1;#P connect 8 1 1 1;#P connect 7 1 1 1;#P connect 6 1 1 1;#P connect 13 0 5 0;#P connect 12 0 5 0;#P connect 11 0 5 0;#P connect 10 0 5 0;#P connect 9 0 5 0;#P connect 8 0 5 0;#P connect 7 0 5 0;#P connect 6 0 5 0;#P connect 2 0 6 0;#P connect 2 0 7 0;#P connect 2 0 8 0;#P connect 2 0 9 0;#P connect 2 0 10 0;#P connect 2 0 11 0;#P connect 2 0 12 0;#P connect 2 0 13 0;#P connect 0 0 6 1;#P connect 0 0 7 1;#P connect 0 0 8 1;#P connect 0 0 9 1;#P connect 0 0 10 1;#P connect 0 0 11 1;#P connect 0 0 12 1;#P connect 0 0 13 1;#P pop;#P newobj 341 182 70 196617 p number_list;#P message 341 113 75 196617 knobmode delta;#P message 258 332 55 196617 page floats;#P message 341 128 75 196617 knobmode -1;#P newex 341 154 131 196617 mmpm 74 floats;#P message 83 44 150 196617 lcd sp 2 1 sp 4 2 sp 4 3 sp 4 4 sp 4 5 sp 4 6 sp 4 7 sp 4 8 sp 2;#P newex 105 182 111 196617 sprintf lcd %d %d sp 2;#P message 258 257 55 196617 page ints;#P newex 105 160 29 196617 + 36;#P newex 105 138 29 196617 * 5;#P newex 105 116 38 196617 unpack;#P hidden newex 258 26 45 196617 loadbang;#P message 83 71 65 196617 knobmode -1;#P newex 83 93 55 196617 mmpm ints;#P comment 325 46 179 196617 this example demonstrates a few techniques for displaying knob values.;#P hidden connect 3 0 9 0;#P hidden connect 3 0 2 0;#P hidden connect 9 0 1 0;#P connect 2 0 1 0;#P connect 1 1 4 0;#P connect 4 0 5 0;#P connect 5 0 6 0;#P connect 6 0 8 0;#P connect 4 1 8 1;#P connect 8 0 15 0;#P hidden connect 7 0 15 0;#P hidden connect 12 0 15 0;#P connect 14 0 15 0;#P hidden connect 3 0 13 0;#P hidden connect 3 0 11 0;#P hidden connect 13 0 10 0;#P connect 11 0 10 0;#P connect 10 0 14 0;#P connect 10 1 14 1;#P pop;#P newobj 316 176 105 196617 p displaying_numbers;#P newex 26 112 45 196617 s mmhub;#P number 88 267 35 9 -1 7 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P message 23 267 65 196617 knobmode \$1;#P message 23 170 95 196617 knobmode delta;#P message 23 155 95 196617 knobmode value;#P message 26 88 79 196617 page knobmodes;#P comment 14 21 108 196626 knobmodes;#P comment 143 275 376 196617 like "value/delta" \, each mmpm can only use one knob display mode at a time. however \, if you use selective page messages to specify knobs from different pages \, it is possible to have several types showing at once. this seems to result in unwanted artifacts with certain combinations \, but is otherwise harmless.;#P comment 143 101 380 196617 in "delta" mode \, the knobs output relative values \, which can be useful to take advantage of their continuous travel and high precision. the relative value is the delta of travel since last output \, relative to zero. slow knob movements produce small positive and negative integer values \, while turning the knob quickly produces bigger changes. this stream of data can be interpreted in whatever way you choose. here is an example of translating delta knob movements into floating-point parameters \, with variable precision:;#P comment 143 337 376 196617 the 8 display modes are referenced by number with the knobmode message \, and specify the following graphic displays:;#P connect 6 0 23 0;#P connect 5 0 23 0;#P connect 7 0 23 0;#P hidden connect 8 0 7 0;#P connect 4 0 9 0;#P connect 23 1 24 0;#P connect 24 0 25 0;#P connect 24 1 26 0;#P pop;#P newobj 493 272 84 196617 p knobs&display;#P button 145 241 15 0;#P hidden newex 31 202 75 196617 prepend append;#N vpatcher 237 189 750 560;#P comment 32 313 438 196617 in my own patches i have not used name arguments - but they seem to work fine. let me know if you experience otherwise.;#P comment 32 281 435 196617 note that objects without name arguments still have an invisible \, default name - and hence function as a single group.;#P comment 30 140 444 196617 if you want to make an independent group of objects that are protected from this kind of interference \, you can provide mmhub with a name as an argument. mmpm objects can then be linked to the named hub by the "hub" argument \, as shown below. mmhub and mmpm objects sharing the same name will function as a group. mmhub will only work with mmpm pages that have its name.;#P newex 264 246 38 196617 print p;#P button 219 220 15 0;#P newex 347 220 103 196617 mmpm hub named foo;#P newex 234 220 70 196617 mmhub named;#P comment 30 82 444 196617 it is generally best to use a single mmhub per patch. multiple mmhubs can co-exist \, but if they are accessing the same mmpm objects \, and sending redundant midi values \, unintentional behavior may result. efficiency will inevitably deteriorate as well. however \, they should behave nicely \, allowing you to open and close patches \, etc. without worrying about the objects conflicting.;#P comment 30 25 444 196622 named hubs and object groups;#P comment 63 220 143 196617 this hub only sees one mmpm:;#P comment 30 62 444 196617 mmhub communicates with mmpm objects remotely \, like send and receive.;#P connect 6 0 4 0;#P connect 4 1 7 0;#P pop;#P newobj 371 152 84 196617 p multiple_hubs?;#P hidden button 557 28 15 0;#P hidden button 476 28 15 0;#P hidden button 395 28 15 0;#N vpatcher 96 149 695 591;#P setbglock 1;#N vpatcher 20 54 518 285;#P setbglock 1;#P hidden button 174 43 15 0;#P hidden button 93 43 15 0;#P hidden button 12 43 15 0;#P hidden newex 189 43 45 196617 pack 1 0;#P number 224 24 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 189 24 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 224 107 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 189 107 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P hidden newex 189 85 45 196617 unpack;#P hidden newex 108 43 45 196617 pack 1 0;#P number 143 24 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 108 24 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 143 107 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 108 107 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P hidden newex 108 85 45 196617 unpack;#P hidden newex 27 43 45 196617 pack 1 0;#P number 62 24 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 27 24 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 62 107 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 27 107 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P hidden newex 27 85 45 196617 unpack;#P newex 27 64 173 196617 mmpm global;#P hidden newex 416 107 45 196617 s mmhub;#P message 281 106 55 196617 page global;#P message 281 91 65 196617 page minimm;#P comment 303 41 109 196626 global page;#P comment 24 144 439 196617 if you give an mmpm object the special name \, "global" \, its inlets and outlets will always be active - no matter which page or combination of pages is selected. the mmpm above will always output values when active parameters are changed \, and input values to the global mmpm will always update the parameter's active page.;#P hidden connect 10 0 24 0;#P hidden connect 24 0 11 0;#P hidden connect 9 0 11 0;#P hidden connect 11 0 5 0;#P hidden connect 5 0 6 0;#P hidden connect 6 0 7 0;#P hidden connect 10 0 11 1;#P hidden connect 6 1 8 0;#P hidden connect 16 0 25 0;#P hidden connect 25 0 17 0;#P hidden connect 15 0 17 0;#P hidden connect 17 0 5 1;#P hidden connect 5 1 12 0;#P hidden connect 12 0 13 0;#P hidden connect 16 0 17 1;#P hidden connect 12 1 14 0;#P hidden connect 22 0 26 0;#P hidden connect 26 0 23 0;#P hidden connect 21 0 23 0;#P hidden connect 23 0 5 2;#P hidden connect 5 2 18 0;#P hidden connect 18 0 19 0;#P hidden connect 22 0 23 1;#P hidden connect 18 1 20 0;#P hidden connect 3 0 4 0;#P hidden connect 2 0 4 0;#P pop;#P newobj 342 204 84 196617 p global_page;#P hidden newex 28 221 45 196617 s mmhub;#P hidden button 176 283 15 0;#P hidden button 95 283 15 0;#P hidden button 14 283 15 0;#P hidden button 448 283 15 0;#P hidden button 367 283 15 0;#P hidden button 286 283 15 0;#P message 80 80 61 196617 page second;#P comment 260 22 240 196626 selective page switching;#P comment 262 180 302 196617 there is also a global page \, which is always active.;#P hidden newex 463 282 45 196617 pack 1 0;#P number 498 263 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 463 263 35 9 67 2 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 498 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 463 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 478 249 39 196617 buttons;#P hidden newex 463 324 45 196617 unpack;#P hidden newex 382 282 45 196617 pack 1 0;#P number 417 263 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 382 263 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 417 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 382 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 397 249 36 196617 knobs;#P hidden newex 382 324 45 196617 unpack;#P hidden newex 301 282 45 196617 pack 1 0;#P number 336 263 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 301 263 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 336 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 301 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 316 249 36 196617 faders;#P hidden newex 301 324 45 196617 unpack;#P newex 301 303 173 196617 mmpm second;#P hidden newex 191 282 45 196617 pack 1 0;#P number 226 263 35 9 0 2 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 191 263 35 9 1 67 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 226 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 191 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 206 249 39 196617 buttons;#P hidden newex 191 324 45 196617 unpack;#P hidden newex 110 282 45 196617 pack 1 0;#P number 145 263 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 110 263 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 145 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 110 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 125 249 36 196617 knobs;#P hidden newex 110 324 45 196617 unpack;#P hidden newex 29 282 45 196617 pack 1 0;#P number 64 263 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 29 263 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 64 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 29 346 35 9 0 0 160 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 44 249 36 196617 faders;#P hidden newex 29 324 45 196617 unpack;#P newex 29 303 173 196617 mmpm first;#P comment 28 184 171 196617 switch all knobs and the buttons 9-32 (the second and third rows);#P message 28 166 152 196617 page first knobs buttons 9 to 32;#P comment 28 143 171 196617 switch fader 1 and knobs 1 and two;#P comment 111 103 114 196617 switch only the faders;#P message 28 103 84 196617 page first faders;#P comment 262 124 302 196617 a symbol (faders \, knobs \, or buttons) \, followed by an int or list of ints \, specifies that only those parameters be switched to the given page. all other parameters will remain assigned to their most recent page.;#P comment 75 383 430 196617 the "mmfm" example patch uses this feature to switch the knobs and faders between four different step sequencers \, while leaving the function of the switches constant.;#P message 28 125 148 196617 page second faders 1 knobs 1 2;#P message 28 80 52 196617 page first;#P comment 262 80 299 196617 optional arguments to the page message specify which controls on that page should be activated. for example \, you can assign the faders to one mmpm object \, and the knobs to another.;#P comment 28 64 160 196617 switch all controls to named page;#P hidden connect 17 0 61 0;#P hidden connect 9 0 64 0;#P hidden connect 3 0 64 0;#P hidden connect 6 0 64 0;#P hidden connect 2 0 64 0;#P hidden fasten 57 0 64 0 85 98 33 98;#P hidden connect 16 0 18 0;#P hidden connect 61 0 18 0;#P hidden connect 18 0 11 0;#P hidden connect 11 0 12 0;#P hidden connect 12 0 14 0;#P hidden connect 17 0 18 1;#P hidden connect 12 1 15 0;#P hidden connect 24 0 62 0;#P hidden connect 23 0 25 0;#P hidden connect 62 0 25 0;#P hidden connect 25 0 11 1;#P hidden connect 11 1 19 0;#P hidden connect 19 0 21 0;#P hidden connect 24 0 25 1;#P hidden connect 19 1 22 0;#P hidden connect 31 0 63 0;#P hidden connect 30 0 32 0;#P hidden connect 63 0 32 0;#P hidden connect 32 0 11 2;#P hidden connect 11 2 26 0;#P hidden connect 26 0 28 0;#P hidden connect 31 0 32 1;#P hidden connect 26 1 29 0;#P hidden connect 39 0 58 0;#P hidden connect 38 0 40 0;#P hidden connect 58 0 40 0;#P hidden connect 40 0 33 0;#P hidden connect 33 0 34 0;#P hidden connect 34 0 36 0;#P hidden connect 39 0 40 1;#P hidden connect 34 1 37 0;#P hidden connect 46 0 59 0;#P hidden connect 45 0 47 0;#P hidden connect 59 0 47 0;#P hidden connect 47 0 33 1;#P hidden connect 33 1 41 0;#P hidden connect 41 0 43 0;#P hidden connect 46 0 47 1;#P hidden connect 41 1 44 0;#P hidden connect 53 0 60 0;#P hidden connect 52 0 54 0;#P hidden connect 60 0 54 0;#P hidden connect 54 0 33 2;#P hidden connect 33 2 48 0;#P hidden connect 48 0 50 0;#P hidden connect 53 0 54 1;#P hidden connect 48 1 51 0;#P pop;#P newobj 291 320 84 196617 p page_selection;#P comment 405 186 100 196617 mmpm messages:;#P comment 9 364 331 196617 bang - outputs all available page names from the middle outlet.;#P comment 9 342 241 196617 lcd <symbol or list> - sets the motormix lcd display.;#P comment 53 224 66 196617 switch pages;#P hidden newex 572 28 45 196617 pack 1 0;#P number 585 87 35 9 0 2 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 550 87 35 9 1 68 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 564 104 39 196617 buttons;#P hidden newex 550 67 45 196617 unpack;#P hidden newex 491 28 45 196617 pack 1 0;#P number 504 87 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 469 87 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 480 105 30 196617 knobs;#P hidden newex 469 67 45 196617 unpack;#P hidden newex 410 28 45 196617 pack 1 0;#P number 423 87 35 9 0 127 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 388 87 35 9 1 8 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P comment 407 104 36 196617 faders;#P hidden newex 388 67 45 196617 unpack;#P newex 388 47 173 196617 mmpm numboxes;#P comment 9 84 359 196617 these objects communicate with the motormix control surface \, by C.M. Labs. (info at http://www.cmlabs.nethttp://www.cmlabs.net/DashboardPage.htm;#P comment 119 22 74 196628 mmpm;#P comment 9 113 358 196617 mmhub and mmpm organize parameters into pages for the motormix to access. a page consists of a value for every control on the motormix. each mmpm object contains one page of parameters.;#P comment 405 205 272 196617 list <control \, value> - update a parameter. if the parameter is active \, mmhub will send it to the motormix. if not \, mmpm still updates it's internal value.;#N vpatcher 119 48 817 654;#P origin 0 -4;#P setbglock 1;#P comment 231 343 441 196617 to specify this mode \, use the "radio" mode name \, followed by an int group id \, and a list of the buttons you want to add to that group. you can add others to the group with additional messages \, and take buttons out of the group by assigning a different mode to them.;#P comment 209 432 454 196617 the button mode can be set independently for each button \, on each mmpm page. currently \, the "vmix" example max patch is probably the most useful reference for button numbers.;#P comment 231 80 424 196617 by itself the motormix does not light any LED's or maintain any state information about the buttons. you can interpret raw button presses in any way you want \, and control the LED's directly with max messages. however \, for convenience \, mmpm offers six different button modes that handle LED and button state logic for you.;#P comment 24 213 129 196617 disable all buttons on a page;#P message 24 193 88 196617 button off 1 to 67;#P comment 211 391 20 196617 off;#P comment 202 296 29 196617 radio;#P comment 194 268 37 196617 btoggle;#P comment 170 232 61 196617 bmomentary;#P comment 199 197 33 196617 toggle;#P comment 175 139 57 196617 momentary;#P comment 231 268 424 196617 - like toggle above \, except that it sends "2" and the LED blinks.;#P comment 231 232 424 196617 - like momentary above \, except that when you press the button \, it sends a value of "2" \, and the LED blinks for the duration of the button press. button release sends "0".;#P comment 231 197 424 196617 - when you press the button \, it will light up and send a "1". release the button \, and the LED remains lit until you push it again \, at which point it will turn off and send a "0" from mmpm.;#P comment 231 391 424 196617 - a button in "off" mode will not respond - the LED will not light up when pressed \, and no message will be sent from mmpm. you can create your own logic \, or leave them inert.;#P comment 94 542 562 196617 on the other hand \, seven of the buttons near the top have two LED's associated with them \, instead of one. these buttons accept additional values to access the second LED. (0 \, 1 \, and 2) switch the first LED as described above \, and (3 \, 4 \, and 5) switch the second LED. the messages are independant \, so the two LED's can be in any combination of states.;#P comment 140 521 503 196617 note that two buttons do not have an LED: the "view" buttons. nothing will happen if you send them LED values.;#P comment 140 465 512 196617 the messages that turn on button LED's are the same as the button output messages above: sending a value of "1" to a button will on its LED \, "0" will turn it off \, and "2" will make it blink. note that there seems to be a slight bug here: if you send a _blinking_ button a "1" \, it will keep blinking. to return it to a steady on state \, first send "0" to turn it off \, then send "1".;#P comment 231 139 424 196617 - this is the default button mode. when you press the button \, its LED will light up and a value of "1" will be sent the active mmpm's right outlet. when you release the button \, a "0" is sent and the LED turns off. all the buttons on the motormix will behave this way unless you assign them a different mode with the button message.;#P newex 24 462 74 196617 s numboxes_in;#P comment 231 23 424 196617 the right outlet of the current mmpm object sends messages in response to button presses on the motormix. similarly \, the rightmost inlet lets you access any LED on the motormix. buttons are numbered from 1 to 67 \, in a reasonably logical fashion. most buttons on the motormix are paired with a single LED \, so they share the same number and data value.;#P comment 24 23 183 196626 button message;#P comment 24 148 129 196617 specify toggle mode for buttons 1 \, 2 \, 5 \, and 6;#P comment 24 398 155 196617 assign buttons 2 \, 3 \, 4 to radio group 0 \, and buttons 9-16 to radio group 0.;#P comment 231 296 441 196617 - lets you create radio button groups. this is the familiar "mutually exclusive" behavior \, where pressing a button turns the others off \, so that only one will be lit at any time. you can assign any combination of buttons to a radio group - they need not be adjacent to each other.;#P message 24 128 102 196617 button toggle 1 2 5 6;#P message 24 378 169 196617 button radio 1 2 3 4 radio 2 9 to 16;#P message 24 251 140 196617 button off 1 to 4 momentary 5 to 8 btoggle 6 to 8 toggle 9 11 bmomentary 10;#P comment 24 295 144 196617 you can specify as many buttons as you want in a single message. format is similar to the page command - you can use the "to" keyword to indicate a range of buttons.;#P comment 24 98 100 196617 a few examples:;#P hidden connect 25 0 10 0;#P hidden connect 4 0 10 0;#P hidden connect 2 0 10 0;#P hidden connect 3 0 10 0;#P pop;#P newobj 493 363 84 196617 p buttons&LEDs;#P hidden newex 223 199 45 196617 r mmhub;#N vpatcher 90 98 733 627;#P origin 0 10;#P setbglock 1;#P message 16 309 42 196617 refresh;#P newex 350 488 45 196617 s mmhub;#P message 350 469 175 196617 lcd 40 5.6 7 8 9 sp 10 10 11 12 sp 8;#P newex 218 488 45 196617 s mmhub;#P message 218 469 128 196617 lcd look - no smart quotes!;#P comment 217 409 385 196617 one final convenience is a special argument to add spaces to the text string. if any argument is the symbol "sp" followed by an int \, it will generate n space characters instead of the text "sp". this is useful for formatting. a good example is the floating-point knob value display in the "knobs&display" subpatcher of this help file.;#P comment 217 353 393 196617 since symbols can be a little cumbersome to format in max \, the lcd command accepts a list of symbols \, ints and floats as well as a single symbol. the arguments are concatenated to form a single text string which is sent to the motormix. if you use this format \, the first argument is still interpreted as the offset \, if it is an int.;#P comment 217 334 366 196617 offset works as described above. here it is used to right-justify the page name.;#P newex 16 332 45 196617 s mmhub;#P message 16 294 75 196617 page numboxes;#P message 16 88 190 196617 lcd ‘each chan  is  five chars               ’;#P number 112 117 36 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P message 147 117 59 196617 lcd \$1 food;#P comment 217 250 388 196617 if you send "lcd" to the most recently activated mmpm \, the display text will be sent immediately. note that whenever mmpm lcd text is sent \, the entire upper row of the lcd display is erased. you can disable this with lcd 0:;#P comment 217 295 389 196617 lcd with (int) 0 argument to mmpm specifies no page text for the mmpm object \, meaning that nothing will be sent to the motormix display when its page is activated.;#P comment 217 205 385 196617 by default \, when mmhub receives a "page" message \, it will write the name of the page to the motormix display. you can change the text for a specific page (without changing its name) by sending the "lcd" command to mmpm.;#P message 102 216 105 196617 lcd ‘channels 1-8’;#P message 177 299 30 196617 lcd 0;#P message 102 333 105 196617 lcd 28 ‘channels 1-8’;#P newex 102 355 74 196617 s numboxes_in;#P comment 16 264 68 196622 mmpm;#P message 176 162 30 196617 lcd 0;#P newex 112 178 45 196617 s mmhub;#P comment 217 107 398 196617 each row is 40 characters wide \, so an offset of 40 writes into the bottom row. note that your text will be overdrawn by the motormix's built-in knob value display \, unless you are on a page with "knobmode" set to -1 (more info on this in the "knobs&display" sub-patcher of this help file).;#P message 112 132 94 196617 lcd 40 ‘       --|||--’;#P message 133 73 73 196617 lcd bananaseat;#P comment 217 74 338 196617 lcd with a symbol argument writes that symbol to the motormix display. an optional int can be added to specify an offset.;#P comment 217 164 271 196617 lcd with (int) 0 argument to mmhub clears the display.;#P comment 217 22 309 196620 both the mmhub and mmpm objects accept "lcd" messages - but they interpret them differently.;#P comment 16 121 74 196622 mmhub;#P comment 16 21 140 196622 lcd messages;#P comment 16 379 121 196617 activate a page to see the results of lcd messages to its mmpm object;#P connect 31 0 23 0;#P hidden connect 22 0 23 0;#P hidden connect 14 0 12 0;#P connect 13 0 12 0;#P hidden connect 15 0 12 0;#P connect 7 0 9 0;#P connect 10 0 9 0;#P hidden connect 19 0 9 0;#P hidden fasten 21 0 9 0 21 111 117 111;#P hidden fasten 6 0 9 0 138 111 117 111;#P hidden connect 20 0 19 0;#P connect 27 0 28 0;#P connect 29 0 30 0;#P pop;#P newobj 493 411 84 196617 p lcd_messages;#P hidden newex 135 267 65 196617 prepend page;#P user umenu 31 240 114 196647 1 64 256 0;#X add none;#P comment 9 306 354 196617 page <name> - switch pages to the named mmpm object. you can specify individual elements for a "selective page switch." more info:;#P comment 9 48 138 196617 motormix parameter system;#P newex 223 261 45 196617 midiout;#P newex 223 219 45 196617 midiin;#P newex 223 240 45 196617 mmhub;#P comment 9 22 78 196628 mmhub;#P comment 9 285 100 196617 mmhub messages:;#P comment 405 258 275 196617 knobmode <mode> - set the display mode for motormix knob values (int 0-7).;#P comment 405 335 268 196617 button <mode> <list of buttons> - specify different interaction modes for the buttons and LED's.;#P comment 405 393 269 196617 lcd <symbol> - change the text that is displayed when page is made active.;#P comment 585 42 50 196617 see also:;#P hidden connect 6 1 45 0;#P hidden connect 45 0 11 0;#P hidden connect 48 1 11 0;#P hidden connect 11 1 12 0;#P hidden connect 46 0 48 0;#P connect 7 0 6 0;#P hidden connect 14 0 6 0;#P hidden connect 12 0 6 0;#P hidden connect 48 0 6 0;#P connect 6 0 8 0;#P hidden connect 60 0 57 0;#P hidden connect 58 0 57 0;#P hidden connect 60 0 59 0;#P hidden connect 59 0 58 0;#P hidden connect 63 0 20 0;#P hidden connect 25 0 20 0;#P hidden connect 20 0 21 0;#P hidden connect 21 0 23 0;#P hidden connect 24 0 41 0;#P hidden connect 23 0 25 0;#P hidden connect 41 0 25 0;#P hidden connect 21 1 24 0;#P hidden connect 24 0 25 1;#P hidden connect 30 0 20 1;#P hidden connect 20 1 26 0;#P hidden connect 26 0 28 0;#P hidden connect 29 0 42 0;#P hidden connect 28 0 30 0;#P hidden connect 42 0 30 0;#P hidden connect 26 1 29 0;#P hidden connect 29 0 30 1;#P hidden connect 35 0 20 2;#P hidden connect 20 2 31 0;#P hidden connect 31 0 33 0;#P hidden connect 34 0 43 0;#P hidden connect 33 0 35 0;#P hidden connect 43 0 35 0;#P hidden connect 31 1 34 0;#P hidden connect 34 0 35 1;#P pop;
max v2;#N vpatcher 78 43 586 474;#P comment 22 394 421 196617 Don't forget to set the mu parameter in the info dialog box to set contextual feedback level.;#P comment 22 228 408 196617 MAXNet also has recurrent net capabilities ala Jordan and Elman. To get the feedback to happen \, use extra input units as the context units. Feedback during training and feedforward happens by setting the input value for the context (really an input unit) to be the index of the unit to receive feedback from. Unit indicies are labled from right-to-left \, input-to-hidden-to-output. For example \, if we wanted feedback from the output unit of the xor example above \, we would first need to increase the number of input units to three \, and then set the patterns as:;#P comment 22 42 406 196617 The file has a header which indicates how many input and output units are in the net and how many patterns to expect. The two hidden parameters are not meaningful and were kept there for unexplained reasons. Each training pattern will have #input units + #output units values delimited by white space (tab or space). The xor.tr file has been included here to illustrate a simple example.;#P comment 22 21 161 196617 Format of training pattern files:;#P comment 100 328 100 196617 0.9 0.9 -6 0.1;#P comment 100 340 100 196617 0.1 0.1 -6 0.1;#P comment 100 352 100 196617 0.1 0.9 -6 0.9;#P comment 100 364 100 196617 0.9 0.1 -6 0.9;#P comment 100 112 100 196617 2;#P comment 100 124 100 196617 2;#P comment 100 136 100 196617 1;#P comment 100 148 100 196617 1;#P comment 100 160 100 196617 4;#P comment 100 172 100 196617 0.9 0.9 0.1;#P comment 100 184 100 196617 0.1 0.1 0.1;#P comment 100 196 100 196617 0.1 0.9 0.9;#P comment 100 208 100 196617 0.9 0.1 0.9;#P pop;
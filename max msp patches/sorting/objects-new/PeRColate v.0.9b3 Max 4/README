PeRColate Nato Objectsby R. Luke DuBoisThis is an advance release of some Nato objects which will go into the next version of PeRColate, Dan Trueman and R. Luke DuBois' open-source collection of objects for Max, MSP, and (now) Nato.The PeRColate web page, from which these objects may be downloaded, is located at:http://music.columbia.edu/PeRColateBy using this software you are agreeing to the software license at the end of this document.This software is copyright ©2001 R. Luke DuBois / The Trustees of Columbia University in the City of New York.  All rights reserved.This distribution contains the following eleven externals.  To use them, place them in your Max search path.  The help files can be placed in your max-help folder or elsewhere on your hard drive.  The files in the 'ref' subfolder are simpletext documents that explain the objects; they are not Max patches and can be viewed with any text editor.  Supporting files for the help patches are in the 'supporting files' folder inside the objects folder.  They can be placed anywhere in the Max search path.242.cga : channel-by-channel bitwise quantization filter.242.colorspace : transforms an image to and from an alternate colorspace.242.constrain : color filter that constrains colors on an image.242.eclipse : performs grid-based meta-imaging on an input image.242.fromage : takes two input images and lets you do cheezy 'wipes' between them.242.imgmatrix : variable inlet/outlet image routing matrix optimized for nato input.242.keyscreen : 3-source keyer that lets you do chroma-keying with an independent mask.242.modgain : does channel tinting with wraparound.242.rgbavg : color filter that uses some peculiar, but interesting, pixel averaging algorithms.242.rgbavg02 : similar to 242.rgbavg but uses two image inputs to create composite filters.242.rgbseek : performs color-searching on an image for event synchronization.Source code for these objects is included in the PeRColate_nato_source folder.  The folder contains the main C files for all the objects.  CodeWarrior projects can be built using any of the standard Nato SDK templates simply by replacing the main C file in the project with one of these.  No additional libraries are necessary beyond the standard libraries included in the example projects that come with the SDK.  Most of these objects use the latest N 4 ª ¨ library (build date 1/27/01), which you will need to access some of the multi-inlet functions in the objects.  These objects were built using CW Pro 4, but should build easily with other compilers.  As with all Max externals, tweaking compiler optimizations and code inlining may increase performance.Please e-mail any bug reports or suggestions to R. Luke DuBois (luke@music.columbia.edu).  A number of bugs have been fixed since the last release, so please check the dates on older versions of the objects.Enjoy!License The Software is provided by R. Luke DuBois and the Computer Music Center, Columbia University (hereinafter referred to as the "AUTHOR"), free of charge and may be distributed free of charge, provided that this documentation is included unchanged with the software. You may not sell the software, nor may you take a fee or commission for providing the software to another person, nor may you include the software with or as part of other software that is sold for a fee without prior written permission from the Author.  Source code for the software, if provided, can be re-used for educational or non-commercial purposes provided the Author is credited both in the product source and in the final product.  The source code for this software may not be re-used for commercial purposes without negotiating and obtaining a commercial licensing agreement from the Author.Disclaimer of Warranty on Software The software is provided "AS IS" and without warranty of any kind. The Author expressly disclaims all warranties, express or implied, including, but not limited to, the fitness for a particular purpose. The Author does not warrant that the software will be uninterrupted or error-free, or that defects in the software will be corrected. Furthermore, The Author does not warrant or make any representations regarding the use or the results of the use of the software in terms of their correctness, accuracy, reliability, or otherwise. No oral or written information or advice given by the Author shall create a warranty or in any way increase the scope of this warranty. Should the software prove defective, you (and not the author) assume the entire cost of all necessary servicing, repair or correction of the software, or the computer system with which it is used. Limitation of Liability Under no circumstances, including negligence, shall the Author be liable for any incidental, special, or consequential damages that result from the use or inability to use the software, even if the Author has been advised of the possibility of such damages.
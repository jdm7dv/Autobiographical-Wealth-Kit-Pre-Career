Spat-1.2: some complements to the manuals=========================================These release notes are intended to serve as a complement to the Introduction and Reference manuals written in 1994-1995 (note that the release notes for the previous versions Spat-1.1 are NOT included here).Contents:---------1. NEW FEATURES of Spat-1.2.2 1.1 Scalability of Spat~ Module      1.1.1 Cost reduced versions of Spat~ without early~ and cluster~ sections		 			1.1.2 Sharing late reverberation module among several Spats 1.2 Binaural reproduction	 				1.2.1 New data base of binaural filters 					1.2.2 Headtracking 1.3 Controlling the radiation of the virtual source						1.3.1 Source directivity						1.3.2 Source orientation2. TOOLS 2.1 Deriving room presets from a measured room impulse response (Matlab Toolbox)	2.2 2D Control Interface	2.3 Store/Recall of Spat_OPer configurations3. REVISIONS AND FIXED BUGS1. NEW FEATURES of Spat-1.2.21.1 Scalability of Spat~ Module1.1.1 Cost reduced versions of Spat~  (Suppression of early~ or/and cluster~ sections)New versions of Room~ have been added that allow to save computation cost by suppressing the cluster~ or/and the early~ sections of the room effect synthesis.These cost reduced options are available in the 4, 6 and 8 channels versions of the room effect. These configurations are controlled by the first argument of the Room~ module (or the second argument of the Spat~ module).Ex : Room~ [4,6,8]c --> complete n channels feedback delay network reverberation																							 with control of early reflexions and cluster sections. 					Room~ [4,6,8]b --> n channels feedback delay network reverberation																							 without the cluster section.					Room~ [4,6,8]a --> n channels feedback delay network reverberation																							 without early  and cluster sections.												 	      Consequences on Spat_OPer control (Perceptual interface):--------------------------------------------------------- when suppressing the cluster section (version b), the Running reverberance perceptual attribute of Spat_OPer is no more effective.- when suppressing the early and cluster sections (version a), the Running reverberance and the Enveloppement perceptual attributes of Spat_OPer are no more effective.Consequences on Room_ control (low level control):--------------------------------------------------Corresponding [4,6,8]a,b,c versions of Room_ have been written so that the sliders which control the energy of early and cluster sections are disabled, according to the specified version of Room~.See : Example patch "Spat-6b+-4r-2.pat"1.1.2 Sharing late reverberation module among several SpatsIn situations where different sources are supposed to be in a single same room they can share a common reverberation module, thus saving computational cost. This is available in 1.2.2 release by using a new set of options for Spat~ module. This is affordable by appending a + or a - to the 2nd parameter of the Spat~ module and by adding the name of the multichannel reverberation bus. A + means that the Spat~ collects the signals from other Spats~ on the named reverberation bus and adds them to the inputs of its own reverberation module. A - means that the Spat~ does not possess a reverb~ module and consequently sends its signals (after early and cluster sections) on the named reverberation bus.Ex: "Spat~ 1 8c+ 4r 0 rev"   :  main Spat~ collecting signals from other Spats on an 8 																													channels bus, named rev, before processing them in its																													internal reverb~ module."Spat~ 1 8c- 4r 0 rev"   :  other Spat~ sending the 8 output signals of its internal 																													cluster~ module to the 8 channels rev bus. "Spat~ 1 8b- 4r 0 rev"   :  other Spat~ sending the 8 output signals of its internal 																													early~ module to the 8 channels rev bus.Consequences on Spat_OPer control (Perceptual interface):--------------------------------------------------------As a consequence, such a shared configuration does not allow to obtain different reverberation time on each source. In 1.2.2 release these configurations are not automatically taken into account by Spat_OPers. User has to link the main Spat_OPer (corresponding to the main Spat~) to the different slaved Spat-OPer's (corresponding to other Spat~) with the OPer-sel_late module (see Spat-6b+-4r-2.pat).  Hence, all Spat_Opers will show same values of reverberance, heaviness and liveness attributes.See : Example patches "Spat-6b+-4r-2.pat" or "Circ.3.help".1.2 Binaural mode 1.2.1 Binaural filters data baseObjects related to the data base of binaural filters (or HRTF) are all stored in the libhrtf directory. The user must now load the patch load_hrtf.pat in order to load the filters, and then set the variable Spat@2b-Head to the name of the data base, which is BinauralHead. This database retrieves information about the source position thanks to variable Spat@2b-Az, and sends in turn the coefficients of the corresponding filter in variable Spat@2b-Filter.Spat@2b-Az is sent by panb2~, which receives the filters coefficients from Spat@2b-Filter.IACC filters (used by various diff~ objects: 2b-diff~ and 2d-diff~) are also stored inside this load_hrtf.pat patch, as well as the conversion filters transaural mode <-> binaural mode. For these last ones, the receive message arrives into variable Spat@2b-corners and Spat@2t-corners sent by shuff_trans, and the filter coefficients are sent to variable Spat@2bt-Filter to the same shuff_trans.Note that the same HRTF database can manage the spatialization of several sources at the same time.See also: shuff_iacc, shuff_iacc_4_4, fltbank, transbank, hrtf_panb2, hrtf_panb2_bank,hrtf_outb2, hrtf_outb2_bank, hrtf_outt2, hrtf_outt2_bank.Example patches: "Spat-6b+-2bt-2.pat", "Spat-8c-2b.pat" or "hrtf_load.pat.help".Objects related to the conversion of traditionnal Max-0.26 2p2z~ object into FTS biquad~ have been added: iir12~ and iir4~.1.2.2 HeadtrackingObjects related to the tracking of the listener's head. Messages from a LOGITECH headtracker can be sent through a serial port of your Macintosh; they are captured in MSP by object HTlogitech. The (yaw,pitch,roll) rotation angles of the head are then compensated for in headtrack. This object has been included into traditionnal Spat object Pan+, which receives the headtracker messages from an extra variable Spat@2b-HT.See also: Pan_HT, YAWconvert, PITCHconvert, ROLLconvert, xy2deg, cart2sph.Example patch: "headtrack.help".1.3 Controlling the radiation of the virtual source1.3.1 Source directivity and orientationVersion 1.2.2 proposes a new way of controlling the sound radiation of thesource. In previous versions user could define the axis spectrum that feedsand the "omni spectrum" which controls the input of the room effect. A simplephysical model has been added to link these properties to a geometricalcharacteristic of the source the "aperture angle". This angle defines theoff-axis direction where sound presents a 3dB attenuation when compared to thereference axis. From this characteristic we derive a sound attenuationproportional to the angle from which the source is seen by thelistener. Hence, small aperture angles will correspond to a highly directivesource. On the contrary, a 180¡ aperture angle corresponds to a nearlyomnidirectional source. User may then select the orientation of the sourcewith the "Yaw" parameter. When the source Yaw is 0¡ the source is facing thelistener and the direct sound reflects the axis spectrum. When yaw increases(up to 180¡) the source is supposed to rotate and, consequently, the directsound shows an attenuation governed by the aperture angle parameter.1.3.2 Links between aperture angle and omni spectrumAnother consequence of the aperture angle control is to link the omni spectrumand the axis spectrum. Considering, for example, a 180¡ aperture anglemeans that the source is nearly omnidirectional, hence the omni spectrum willbe nearly equal to the axis spectrum. The smaller the aperture angleis the higher the directivity will be, which, consequently, willdecrease the omni spectrum.In the present version the aperture angle is defined for mid frequencies. Theradiation characteristics of low and high frequencies are controlled by therelative position of BF and HF sliders of omni spectrum compared to the MFslider : lower (higher) values correspond to higher(lower) directivity.2. TOOLS2.1 Creating room presets derived from measured impulse response (Matlab Toolbox)Besides the Spat~ Library, the distribution 1.2.2 also provides a MatlabToolbox named EDR-1.5. This toolbox contains a set of functions that allows toderive an automatic parametrisation of Spat_Oper from a measured room impulseresponse. The main features of the toolbox are :- input data are monophonic room impulse responses. - time-frequency analysis of the response.- derivation of physical variable versus frequency (Reverberation time,power spectrum of the source,...)- denoising of the reverberation tail- derivation of low level and high level parameters for the automaticsetting of Spat~- automatic generation of a Max message box, containing the settingsSupported file formats for input and ouput (denoised response) are AIFF,SND, AU, WAV, RAW, AMS (a measurement software used at Ircam).The patch Spat_Preset shows an example for manipulating presetsderived from measured impulse response using Matlab Toolbox EDR-1.5described above, and stored with fact_mem abstraction.2.2 2D Control InterfaceOn Max MSP ----------Circ.1 and Circ.3 are 2D interface which allow respectively to control 1 or 3independant sources in azimuth, distance, source orientation andradiation. The output data have to be converted by the abstraction Spat_Circbefore sending them to the remote input (left inlet) of Spat_OPer.See patch Circ1.help & Circ3.helpOn SGI------Circ52.3 Store/Recall of Spat_OPer configurationsfact_mem is a tool for storing and calling Spat_OPer parameters into a set ofmemory. It is based on the Max Opcode "coll" abstraction.3. REVISIONS AND FIXED BUGS1- 8pw-Out~ [delay-gain correction]This object is equivalent to 8hl-Out~ with simple gain (pw~) and delay correctionsinstead of hlshelf1~ filters2- A2g and g2A tablesThese tables are used for the control of the source radiation. Forcompatibility with Max-0.26 on NeXt computers these tables are loaded with a#0- prefix. [Thanks to Eric Daubresse]3- delgenA workaround has been written to avoid initialization problems of the roomeffect on some SGI confiurations.5- OPer / Spat_OPer	a) In the 1.2.1 version Elevation controls were not processed	properly. This bug is fixed.	b) Another "drop mode" has been added. Drop mode is used to link	distance with the "source presence" perceptual attribute. Up to	version 1.1.2 this drop mode intended to simulate the physical law	of sound attenuation with distance i.e. attenuation proportional to	the logarithmic of the distance [typically 6dB by doubling of the	distance]. The added mode is linear i.e. the attenuation is	proportional to the distance. This second mode might be preferable	when using mouse controller (see 2D interface).    	c) This mode may be chosen in the Spat_Oper interface by clicking	on the corresponding message box. Remote messages can be sent to	Spat_Oper to control this mode with the following syntax :	  "drop log2" --> logarithmic mode (default mode)	  "drop linear"  --> linear mode	  "drop $1" --> where $1 is the attenuation coefficient (dB)5- sigpw~A logical test has been added to clip negative values on the controlinlet. Negative values are forced to zero.6- radiationOn SGI, version 1.2.1 (not distributed) generates a warning message "Unable to create : route 1.000000". This bug is fixed in 1.2.2You can mail support requests (bug reports, requests for features or explanations, etc.) to jmjot@ircam.fr., larcher@ircam.fr, warusfel@ircam.fr       ---------- COPYRIGHT/PATENT NOTICE AND DISCLAIMER ---------- This software is intended for use with Max and MSP on Macintosh computers.The use of this software and its documentation is restricted to members of the Ircam software user group. All material archived here is Copyrighted 1998 IRCAM - Espaces Nouveaux unless otherwise noted. This software cannot be copied, in whole or in part, without the written consent of IRCAM or Espaces Nouveaux.IRCAM and Espaces Nouveaux make no guarantee as to the reliability or safety of this software.Commercial applications of algorithms implemented in this software are covered by French patents no. 92 02528 and 95 10111 (US patents no. 5,491,754 and 5,812,674), both assigned to France Telecom.Spat is a trademark of IRCAM and Espaces Nouveaux.Max is a trademark of Opcode Systems and IRCAM.MSP is a trademark of Cycling'74.
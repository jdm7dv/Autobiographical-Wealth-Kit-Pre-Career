max v2;
#N vpatcher 378 106 905 654;
#P comment 316 384 78 1376266 remote control interface;
#P newex 261 380 53 1376268 Foo_;
#P button 240 360;
#P comment 201 360 41 1376266 reset >;
#P comment 248 449 45 1376266 control;
#P newex 240 423 53 1376268 Foo_;
#P newex 184 469 66 1376268 Foo~;
#P comment 185 454 14 1376266 |;
#P comment 184 440 46 1376266 signal in;
#P comment 185 490 14 1376266 |;
#P comment 197 505 60 1376266 signal out;
#P newex 350 484 135 1376265 declare uselib=1 path=../lib-ispw:../lib:../help;
#P comment 46 60 421 1376266 The rightmost inlet of Foo~ receives control messages which are interpreted according to a given syntax. These messages are lists of symbols or numbers \; Foo~ takes an argument which defines a particular implementation of the DSP object.;
#P comment 11 43 101 1376266 Foo~ - DSP object:;
#P comment 11 17 489 1376270 DSP and low-level control objects : control method 1 (main modules);
#P comment 11 103 226 1376266 Foo_ - Corresponding low-level control object:;
#P comment 11 189 61 1376266 DISPLAY:;
#P comment 45 206 454 1376266 Disabling the GUI updates may make your patch faster \, especially if many GUIs are open \; Foo_ recognizes the message 'DISPLAY <int>' \, which will enable the GUI updates in Foo_ if <int> is nonzero and disable them otherwise. This message is not relevant for Foo~ but it will be transmitted through Foo_'s outlet as any other incoming message. However \, it is not transmitted if the local DISPLAY toggle is used in Foo_.;
#P comment 13 275 41 1376266 reset:;
#P comment 45 292 454 1376266 The control syntax of Foo~ and Foo_ includes 'bang' \, which has the same effect as the 'reset' button in Foo_. The 'bang' message is transmitted in order to reset the DSP parameters in Foo~ and will update the GUI in Foo_ accordingly (if the DISPLAY mode is enabled). At loadtime \, both Foo~ and Foo_ reset themselves internally (note that it does not enable the DISPLAY mode).;
#P comment 45 120 454 1376266 Foo_ can be connected to the control inlet of Foo~ and contains a graphic user interface (GUI) for modifying any DSP parameter in Foo~. All messages received on the inlet of Foo_ are transmitted to its outlet (=> to Foo~). These incoming messages also update the GUI in Foo_ if they match the control syntax of Foo~ and if GUI updates are enabled \; The first argument of Foo_ (a symbol) can be used to identify different instances of Foo_.;
#P connect 19 0 15 0;
#P connect 15 0 14 1;
#P connect 18 0 15 0;
#P pop;

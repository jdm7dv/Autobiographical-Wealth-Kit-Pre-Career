max v2;#N vpatcher 99 349 572 648;#P newex 231 73 96 1376265 Spat_Circ source1 2.5;#P newex 231 52 65 1376265 Circ.3 source1;#N vpatcher 221 294 561 452;#P outlet 261 102 15 0;#P outlet 228 102 15 0;#P outlet 195 102 15 0;#P outlet 162 102 15 0;#P outlet 126 102 15 0;#P outlet 92 102 15 0;#P outlet 58 102 15 0;#P outlet 24 102 15 0;#P inlet 24 22 15 0;#P inlet 300 20 15 0;#P newex 24 58 290 1376265 Spat~ 1Da 8c 6r 6hl;#P connect 2 0 0 0;#P connect 1 0 0 2;#P connect 0 0 3 0;#P connect 0 1 4 0;#P connect 0 2 5 0;#P connect 0 3 6 0;#P connect 0 4 7 0;#P connect 0 5 8 0;#P pop;#P newobj 26 186 152 1376265 patcher Spat~;#P comment 233 218 56 196617 <-- print low-level control messages;#P comment 307 183 58 196617 print --> high-level commands;#P newex 26 97 30 9 max;#P comment 43 76 26 196618 dsp;#P toggle 26 75 16 0;#N vpatcher 334 162 830 653;#P comment 13 196 481 196618 The configuration implies 3 declarations: radius \, corners and width (see Pan~ / Pan_ for definitions).;#P comment 13 175 186 196622 Loudspeaker configuration;#P comment 13 112 449 196618 This user-defined initialization can include both high-level messages (e.g. localization of the sound source and default values of the perceptual attributes describing the acoustical quality) and low-level messages (modifications of the default values of low-level parameters \, including e.g. the configuration of the loudspeaker setup).;#P newex 346 84 94 9 source1-OPer_init;#P comment 13 13 90 196622 Initialization;#P comment 1 0 11 196618;#P comment 13 34 481 196618 Spat~ and Spat_ \, as any low-level modules of the Spat~ library \, reset themselves at loadtime or any time they receive a 'bang'. To avoid conflicts \, there is no high-level reset at loadtime \, so Spat_OPer must be initialized (reset) once the patch is loaded \, by sending it a bang or with the 'reset' button (this always causes a low-level reset followed by the high-level reset).;#P comment 13 86 350 196618 The high-level reset messages are stored in the user-defined abstraction (if it can not be found \, the default OPer_init is used instead).;#P comment 13 375 197 196622 Frontal loudspeaker setups;#P comment 13 209 479 196618 The 'radius' parameter is useful for preserving the distance scale when going from a loudspeaker setup to another one with a different size (say \, from the studio to the concert hall). This may be recommended since the 'Dist' control \, at the high level \, affects both the predelay / Doppler effect and the 'presence' effect \, when 'Dist' becomes larger than 'radius'. In this example patch \, the radius is assumed equal to 2.5 m.;#P comment 13 274 479 196618 The 'corners' declaration is useful for preserving the perceived direction (azimuth in degrees \, denoted 'Az') irrespective of the geometry of the louspeaker setup. In this example patch \, a standard quadraphonic geometry is assumed.;#P comment 13 313 478 196618 The 'width' parameter defines the angular span of the early reflections ('sides' channels \, L and R) around the direction of the source ('center' channel \, C). In a typical configuration \, 'width' should be set identical to the first value in the 'corners' list. This means that \, when the source is in front (i.e. Az = 0) \, the early reflections \, L and R \, are fed to the left and right front loudspeakers \, respectively.;#P comment 13 396 472 196618 It is possible to use only the two front channels while Spat~ (or \, actually \, Pan~) is configured for 4 channels (version '4r' of Pan~). This implies that the direct sound and the early reflections will fade out when the azimuth is set to the rear sector \, and that the diffuse reverberation level will be 3 dB lower. Similarly \, for a 3-channel frontal setup \, the first 3 channels of a '5r' configuration can be used (for a 5-channel frontal setup \, you can use a '7r' configuration without the rear channels 5 and 6).;#P pop;#P newobj 231 29 103 9 patcher config;#P comment 336 31 107 196618 Init. & configuration;#P comment 326 57 99 196618 Connection to 2-D graphic interface;#P comment 101 70 122 196618 Example remote control;#P newex 254 96 71 9 r Spat_control;#P comment 126 155 95 196618 Low-level control;#P comment 122 119 99 196618 High-level control;#P newex 26 248 110 9 dac~ 5 6 7 8 9 10;#P newex 26 142 73 9 input~;#P newex 222 116 177 9 Spat_OPer source1;#P newex 198 249 34 9 print;#P newex 198 228 34 9 gate;#P toggle 198 208 15 0;#P newex 366 221 33 9 print;#P newex 366 200 33 9 gate;#P toggle 366 180 15 0;#P comment 65 97 50 196620 Reset >;#P message 115 97 92 9 bang \, DISPLAY 0;#P newex 222 152 103 9 Spat_ source1 1 8c;#P comment 20 14 189 196620 1 source -> 2 or 4 speakers;#P newex 26 41 83 9 about Spat...;#P connect 28 0 11 0;#P connect 27 0 28 0;#P connect 26 0 13 0;#P connect 26 1 13 1;#P connect 26 2 13 2;#P connect 26 3 13 3;#P connect 26 4 13 4;#P connect 26 5 13 5;#P connect 23 0 21 0;#P connect 21 0 23 0;#P connect 16 0 11 0;#P connect 12 0 26 0;#P connect 11 0 2 0;#P connect 11 1 6 1;#P connect 9 0 10 0;#P connect 8 0 9 0;#P connect 6 0 7 0;#P connect 5 0 6 0;#P connect 3 0 11 0;#P connect 2 0 26 1;#P connect 2 0 9 1;#P pop;
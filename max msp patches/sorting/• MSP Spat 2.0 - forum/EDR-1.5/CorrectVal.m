function [Yout, Indexes] = CorrectVal(Yin, Val)% CorrectVal%% [Yout, index] = CorrectVal(Yin, Val)%% This function detects Val values in the signal Yin, and eliminate them% by replacing them with a linear combination of the two nearest non Val% neighbours of the Val values. Tipically Val equals eps or 0.%% Yin   : signal with NaN values % Val   : value to detect and replace in Yin%% Yout  : signal without Val values% index : vector containing indexes where values have changed% % See also : CorrectNaNy = Yin;y = real(y);vec = find(y == Val);Indexes = vec;if (~isempty(vec)) i = 1;  while(i <length(vec)+1)   ParserBegin = vec(i);   ParserEnd = vec(i);   if (i ~=length(vec))     while(vec(i+1)== vec(i)+1)       ParserEnd = vec(i+1);       i = i+1;       if(i == length(vec))         ParserEnd  = vec(length(vec));         break;       end     end   else     ParserEnd = vec(length(vec));   end       %fprintf('Begin : %d, End %d\n',ParserBegin, ParserEnd)        if(ParserBegin == 1)      for j = 1: ParserEnd        y(j) = y(ParserEnd+1);      end   else     if(ParserEnd == length(y))      for j = ParserBegin: length(y)       y(j) = y(ParserBegin-1);      end     else       xe= [ParserBegin-1, ParserEnd+1];       ye =[y(ParserBegin-1), y(ParserEnd+1)];       xl = [ ParserBegin:ParserEnd];       yl = spline(xe, ye, xl);       y(ParserBegin:ParserEnd) = yl;     end   end         i = i+1; end endYout = y;
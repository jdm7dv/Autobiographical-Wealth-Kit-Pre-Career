function [Result] = crit2patch(name,face,omni,crit,Times,fd,Ndelays)% crit2patch (EDR-1.5)%% [Result] = crit2patch(name,face,omni,crit,Times,fd,Ndelays)%% Creates a Max patch from a set of Spatialisateur criteria, with% a message box which can be send to a Spatialisateur% % See also :  EDRanalysis, RI2Spat, Ener2MatSpat, MatSpat2crit,fdensResult = 1;[t r] =  strtok(name, '.');switch(r)  case '.pat',fullname = name;  otherwise, fullname = [t '.pat'];end      fid = fopen(fullname, 'w');if (fid == -1)    fprintf('There was a problem creating the output file. Check your machine,\n')     fprintf('or have a serious talk with the system administrator');    Result = 0;    returnendfprintf('Writing patch in file %s\n',fullname)fprintf(fid, 'max v2');fprintf(fid, ';\n');fprintf(fid,'#N vpatcher 492 337 795 504');fprintf(fid,';\n'); 	fprintf(fid,'#P inlet 14 8 15');        fprintf(fid,';\n');        fprintf(fid , '#P message 14 27 235 0 ');                fprintf(fid,'crit Es %f \\, crit Desl %f \\, crit Desh %f \\, ',crit(1),crit(2),crit(3));        fprintf(fid,'crit Rev %f \\, crit Edt %f \\, crit Rd1 %f \\, ',crit(4),crit(5),crit(6));	fprintf(fid,'crit Rt %f \\, crit Drtl %f \\, crit Drth %f \\, ',crit(7),crit(8),crit(9));	fprintf(fid,'source axis %f \\, ',face(1));	fprintf(fid,'source axis Gl %f \\, ', face(2));	fprintf(fid,'source axis Gm 0 \\, ');	fprintf(fid,'source axis Gh %f \\, ', face(3));	fprintf(fid,'source omni %f \\, ',omni(1));	fprintf(fid,'source omni Gl %f \\, ', omni(2));	fprintf(fid,'source omni Gm 0 \\, ');	fprintf(fid,'source omni Gh %f \\, ', omni(3));	fprintf(fid,'early delay count 8 \\, ');	fprintf(fid,'cluster delay count %d \\, ', Ndelays);	fprintf(fid,'reverb delay count %d \\, ', Ndelays);	fprintf(fid,'early start %f \\, ', Times(1));	fprintf(fid,'early end %f \\, ', Times(2));	fprintf(fid,'cluster start %f \\, ', Times(2)+(Times(2)-Times(1))*0.12);	fprintf(fid,'cluster end %f \\, ', Times(3)+0.1*(Times(3)-Times(2)));	fprintf(fid,'reverb start %f \\, ', Times(3)-0.1*(Times(3)-Times(2)));	fprintf(fid,'reverb fdens %f \\, ', fd);	fprintf(fid,'cluster delay distr 0.6');        fprintf(fid, ';\n');	fprintf(fid,'#P newex 14 167 77 0 s $1');        fprintf(fid,';\n');	fprintf(fid,'#P connect 2 0 1 0');        fprintf(fid,';\n');	fprintf(fid,'#P connect 1 0 0 0');        fprintf(fid,';\n');        fprintf(fid, '#P pop');        fprintf(fid, ';\n');        Result = fclose(fid); %end
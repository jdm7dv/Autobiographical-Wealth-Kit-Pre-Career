function [Result] = fact2patch(name,face,omni,fact,Times,fd,Ndelays, distance)% fact2patch (EDR-1.5)%% [Result] = crit2patch(name,face,omni,fact,Times,fd,Ndelays, distance)%% Creates a Max patch from a set of Spatialisateur perceptual factors, % with a message box which can be send to a Spatialisateur% % See also :  EDRanalysis, RI2Spat, Ener2MatSpat, MatSpat2crit,fdens,%             crit2patch, crit2factResult = 1;[t r] =  strtok(name, '.');switch(r)  case '.pat',fullname = name;  otherwise, fullname = [t '.pat'];end      fid = fopen(fullname, 'w');if (fid == -1)    fprintf('There was a problem creating the output file. Check your machine,\n')     fprintf('or have a serious talk with the system administrator');    Result = 0;    returnendfact = round(fact);fprintf('Writing patch in file %s\n',fullname)fprintf(fid, 'max v2');fprintf(fid, ';\n');fprintf(fid,'#N vpatcher 492 337 795 504');fprintf(fid,';\n'); 	fprintf(fid,'#P inlet 14 8 15');        fprintf(fid,';\n');        fprintf(fid , '#P message 14 27 235 0 ');                fprintf(fid,'fact pres %0.f \\, fact warm %0.f \\, fact bril %0.f \\, ',fact(1),fact(2),fact(3));        fprintf(fid,'fact prer %0.f \\, fact revp %0.f \\, fact env %0.f \\, ',fact(4),fact(5),fact(6));	fprintf(fid,'fact rev %d \\, fact heav %d \\, fact live %d \\, ',fact(7),fact(8),fact(9));	fprintf(fid,'source axis %f \\, ',face(1));	fprintf(fid,'source axis Gl %f \\, ', face(2));	fprintf(fid,'source axis Gm 0 \\, ');	fprintf(fid,'source axis Gh %f \\, ', face(3));	fprintf(fid,'source omni %f \\, ',omni(1));	fprintf(fid,'source omni Gl %f \\, ', omni(2));	fprintf(fid,'source omni Gm 0 \\, ');	fprintf(fid,'source omni Gh %f \\, ', omni(3));               fprintf(fid,'source Yaw 0 \\, ');        fprintf(fid,'source Pitch 0 \\, ');        fprintf(fid,'source Roll 0 \\, ');        fprintf(fid,'source Az 0 \\, ');        fprintf(fid,'source El 0 \\, ');        fprintf(fid,'source fl 177 \\, ');        fprintf(fid,'source fh 5657 \\, ');        fprintf(fid,'source drop 6. \\, ');        fprintf(fid,'source drop log2. \\, ');        fprintf(fid,'source A3Y 80 \\, ');           fprintf(fid,'source Dist %f \\, ', distance); 	fprintf(fid,'early delay count 8 \\, ');	fprintf(fid,'cluster delay count %d \\, ', Ndelays);	fprintf(fid,'reverb delay count %d \\, ', Ndelays);	fprintf(fid,'early start %f \\, ', Times(1));	fprintf(fid,'early end %f \\, ', Times(2));	fprintf(fid,'cluster start %f \\, ', Times(2)+(Times(2)-Times(1))*0.12);	fprintf(fid,'cluster end %f \\, ', Times(3)+0.1*(Times(3)-Times(2)));	fprintf(fid,'reverb start %f \\, ', Times(3)-0.1*(Times(3)-Times(2)));	fprintf(fid,'reverb fdens %f \\, ', fd);	fprintf(fid,'cluster delay distr 0.6');        fprintf(fid, ';\n');	fprintf(fid,'#P newex 14 167 77 0 s $1');        fprintf(fid,';\n');	fprintf(fid,'#P connect 2 0 1 0');        fprintf(fid,';\n');	fprintf(fid,'#P connect 1 0 0 0');        fprintf(fid,';\n');        fprintf(fid, '#P pop');        fprintf(fid, ';\n');Result = fclose(fid); 
function[face,omni,crit] = MatSpat2crit(EnerT,Offset);% MatSpat2crit (EDR-1.5)%% [face, omni, crit] = MatSpat2crit(EnerMat, offset);%% Converts the energetical matrix to Spatialisateur criteria% % See also :  EDRanalysis, RI2Spat, Ener2MatSpat, MatSpat2critODlow = EnerT(1,1);ODmid = EnerT(1,2);ODhigh = EnerT(1,3);R1low = EnerT(2,1);R1mid = EnerT(2,2);R1high = EnerT(2,3);R2low = EnerT(3,1);R2mid = EnerT(3,2);R2high = EnerT(3,3);R3low = EnerT(4,1);R3mid = EnerT(4,2);R3high = EnerT(4,3);RTlow = EnerT(5,1);RTmid = EnerT(5,2);RThigh = EnerT(5,3);C6LN10 = 6 * log(10);C = 10^(-1.2/RTmid);%%%%%%% Omni %%%%%%GlOmni = ((R3low*C6LN10/RTlow)/(R3mid*C6LN10/RTmid))^2;GhOmni = ((R3high*C6LN10/RThigh)/(R3mid*C6LN10/RTmid))^2;%%%%%%% Es %%%%%%%Es = ODmid+R1mid;DEsl = ((R1low/R1mid)/sqrt(GlOmni))^2;DEsh = ((R1high/R1mid)/sqrt(GhOmni))^2;%%%%%%%%% Face %%%%%%%%%%GlFace = ((ODlow/ODmid)/sqrt(DEsl))^2;GhFace = ((ODhigh/ODmid)/sqrt(DEsh))^2;%%%%%%%% Rev %%%%%%%%if ((1-C)*R3mid/Es <= 4)   Rev = (C*R3mid + (((1-C)*R3mid)^2)/(8*Es));else   Rev = (R3mid-2*Es); %J'ai corrige R3 en R3midend%%%%%%% Edt %%%%%%if ((Es+R2mid)<30.622*R3mid)   Edt = 0.4 + RTmid*(1-0.667*log10(1 + (Es+R2mid)/R3mid));else   Edt = 0.6 / (log10(1 + (Es+R2mid)/R3mid));end%%%%%% Rd1 %%%%%%%Rd1 = (0.3*R1mid + 0.05*R2mid)/Es;%%%%%% RT %%%%%%%RT = RTmid;Drtl = RTlow / (2*RTmid -RTlow);Drth = RThigh / (2*RTmid -RThigh);crit = [10*log10(Es)+Offset,10*log10(DEsl),10*log10(DEsh),10*log10(Rev)+Offset,Edt,10*log10(Rd1),RT,Drtl,Drth];face = [1.0,10*log10(GlFace),10*log10(GhFace)];omni = [1.0,10*log10(GlOmni),10*log10(GhOmni)];
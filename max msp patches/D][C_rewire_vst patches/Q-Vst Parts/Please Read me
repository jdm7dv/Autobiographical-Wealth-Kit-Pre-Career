Hi Glitch,Here are all parts of Quad  Vst. Make sure to place all externals int Max folder which You don't allready have, andSet this Folder as Search Path in the max File Preferences.Otherwise it might fail to Load Picture Files.Main Patcher has all stuff inside.The other Modules are allready embedded as B-Patchers.I included them separately so that You can have a look inside.I never use multiple instances of same B patcher with # changeable Arguments, because Max is unreliable and can corrupt them sometimes.If I knew somebody would have interest to look inside, I would have made everything a bit smaller so to fit on 17 inch screen.After starting <Quad-VST > Patcher, please start Window Reset Patcher.It has window commands inside for unlocking zoom, grow etc window functions.Please don't get confused, because addressing is quite complex.I use many send/receive objects instead of patch cords, because I usually start creating functional parts first, and think later about placement of visible elements in the main window.Also there are many subpatchers.Some can be opened in the main window, some can be viewed only in individual Modules.Here are just a few details:Each VST module and Master Bounce has own collector inside wich receives all valuesand dumps it into Main Collector when File Store or Update Button is clicked.Loaded VST Instr. ,Plugins and  Fx Banks files send File Path directly to Main collector.Each module has own address VST Module 1 aI for VST Instr. aP for plugin, n1I for loaded Instrument Fx Bank File, n1P for loaded Plugin Fx Bank File, etcOn every app Launch all this addresses get filled with "0".If one Module loads a Instr or Pluginit sends file path to main collector and also sets value "1" for the  Fx Bank.That means that it loads factory presets.If some Fx Bank gets loaded it's full path gets stored instead.This kind of addressing helps me to  control the Load order when <Quad-VST> File gets opened.I send it first memory address " aI'. If the stored value is "0' that means that no Vst Instrument was stored in the VST Module 1, and so I bypass the Plugin address as well and go straight to next VST Module.If address had a file path it will send "Plug: + File Path" to firstVST Object which is for Instrument, and after 1 second check if n1I address ( Fx Bank) has "1"or file path inside.In case of "1" plug gets 'pgmnames" message to load factory default names.If it had file path, message read: + file path" is sent to Vst Object which then loads Bank.In that time message 'pgmnames' is in the queue and loads preset names from the loaded Fx Bank File.when Menu with Preset names gets filled I use it to trigger a Line Object, so that it runs until menu fillup is finished, and it sends a Bang to next memory address when it finishes counting.Next memory address is VST Plugin of the same module (here aP )and it does the same procedure as explained before.That goes on untill all memory adresses have been checked.When Last Module (Master Bounce) finishes a Bang is sent to a Line object which counts from 1 to 6 ( VST Module 1 has address1 etc) ands so recalls other Values ( Faders, Switches etc). When this Line object is done it sends a Bang to another Line objects which activates Audio Driver.(It gets disabled when when File gets Loaded).Just sending "ON" message is not really reliable so I send it allways On, Off On message.It maybe sounds a bit complicated, but if one does not take control of the Loading process, random things happen and a good part of the data does not get loaded.I hope You get the picture.Well I could talk for hours about it, but must leave now.I will upload the whole thing now,and would be glad to answer any other questions about it.Greetings,String